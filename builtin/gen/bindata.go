// Code generated by go-bindata.
// sources:
// compiled/Executor.abi
// compiled/Executor.bin
// compiled/Executor.bin-runtime
// compiled/Extension.abi
// compiled/Extension.bin
// compiled/Extension.bin-runtime
// compiled/ExtensionNative.abi
// compiled/ExtensionNative.bin
// compiled/ExtensionNative.bin-runtime
// compiled/IMeterNative.abi
// compiled/IMeterNative.bin
// compiled/IMeterNative.bin-runtime
// compiled/Measure.abi
// compiled/Measure.bin
// compiled/Measure.bin-runtime
// compiled/Meter.abi
// compiled/Meter.bin
// compiled/Meter.bin-runtime
// compiled/MeterGov.abi
// compiled/MeterGov.bin
// compiled/MeterGov.bin-runtime
// compiled/MeterNative.abi
// compiled/MeterNative.bin
// compiled/MeterNative.bin-runtime
// compiled/Params.abi
// compiled/Params.bin
// compiled/Params.bin-runtime
// compiled/ParamsNative.abi
// compiled/ParamsNative.bin
// compiled/ParamsNative.bin-runtime
// compiled/Prototype.abi
// compiled/Prototype.bin
// compiled/Prototype.bin-runtime
// compiled/PrototypeEvent.abi
// compiled/PrototypeEvent.bin
// compiled/PrototypeEvent.bin-runtime
// compiled/PrototypeNative.abi
// compiled/PrototypeNative.bin
// compiled/PrototypeNative.bin-runtime
// DO NOT EDIT!

package gen

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _compiledExecutorAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x55\x3d\x6f\xdb\x40\x0c\xfd\x2f\x9c\x35\xb5\x45\x51\x68\x33\xd2\xa5\x43\x01\x4f\x5d\x82\xc0\xa0\x75\x4c\x7a\xa8\x4c\xaa\x77\x3c\x25\x42\x90\xff\x5e\xc4\xd2\xf5\x24\xeb\xa3\x6e\x6a\x58\xe8\x66\xc0\x8f\x4f\x8f\x8f\x8f\xbc\xdb\x67\x28\x84\xbd\x22\x2b\xe4\xea\x02\x65\x60\xb9\x0a\xea\x21\xbf\x7d\x06\xc6\x03\x41\x0e\x90\x81\x36\xd5\xeb\x2f\x34\xc6\x91\xf7\xf0\x72\x97\xc5\x3f\xb1\xaa\x9c\xd4\xe4\x3c\x64\x20\x41\x4f\x6b\xad\x21\x56\xab\x4d\xe2\xd8\x37\x4a\xfe\xfd\x3b\x78\xc9\x12\x88\xb7\xf2\x48\xae\x87\x11\x29\x8f\x1f\xa9\xb0\xc1\x7d\x49\x90\xdf\x63\xe9\x29\x03\xaf\xa8\xf4\x35\x28\xee\x6d\xf9\xca\x9a\x43\x6d\xe9\x31\x15\xde\x07\x2e\xd4\x0a\x1f\xd9\x67\x3b\x1b\xab\xbf\x91\xc0\x3a\xdd\x41\x22\x0f\x96\xf5\xd3\x25\x65\x75\xd5\x63\xc7\x77\x51\xd7\xa2\xf5\x8e\x6a\xf9\x41\x9b\x04\x4d\xea\xcf\xd2\xc8\xc2\x11\xf4\x97\x06\x4e\x98\xf3\x7b\xac\x49\x5f\xe5\xa4\x12\x8f\xe5\x4c\x34\xd4\x1e\x68\x7b\x84\x90\x19\x9a\xfc\xf1\x43\x3f\x1d\x2d\xcd\xa4\x17\x09\xf4\x33\x88\x0b\x87\xd1\xac\x12\xa0\x75\x14\xcb\x38\xe9\x39\x1c\x3d\x51\x11\xb4\xaf\xa8\x0d\x63\x42\x28\xba\x07\xd2\x45\x35\x06\x15\x4f\xac\x59\x3d\x37\x49\xdd\x6e\x61\x29\x7b\xab\x61\xcc\x55\xa2\x35\xdf\xcc\x19\x46\xef\xe6\x9c\x1e\x66\xe7\x4f\x9b\xdd\x6f\xff\x4a\xcd\x15\xc2\xea\xb0\x98\x6a\xaf\x37\x03\x55\x2c\xbe\x7f\x13\xb5\xfc\x70\x93\x0a\xd6\x18\x46\x5c\xe6\x2f\x9f\x97\x53\xd3\x46\x66\x25\x91\x67\x99\x6a\xe8\x7f\x33\xb5\xbb\x49\x2b\x5f\xf8\x09\x2b\xeb\x81\x89\x33\x77\xfe\xd2\xcf\x3a\xb2\x70\x73\x90\xe0\xa7\x9c\xb5\x6c\xe8\x89\x4c\xec\xe7\xe4\x25\x9a\xf4\x39\xeb\x55\x75\x84\x31\xcc\xed\x47\x97\x46\xb3\xed\x98\x13\x88\x6a\x62\x7d\xab\xd0\xe5\xfb\xfd\x76\x99\x9b\x11\xef\x3f\xc9\x8c\x7b\xb6\x31\xe6\xe2\x52\x47\x8b\x39\x14\x7c\xf7\x2b\x00\x00\xff\xff\xa9\x52\x06\x45\xb3\x0a\x00\x00")

func compiledExecutorAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorAbi,
		"compiled/Executor.abi",
	)
}

func compiledExecutorAbi() (*asset, error) {
	bytes, err := compiledExecutorAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x09\x76\xb3\xba\x0e\xde\x92\x06\x6b\xf0\x72\xc0\xd8\xfb\x5f\xc2\x3b\x1e\x48\x48\x49\x42\x48\x6f\xd3\xde\xf3\x6e\x7b\xfe\x34\xc7\x80\x2d\x6b\xfc\x24\x8b\x5f\xc1\x41\x21\x80\x10\x07\x07\x14\x45\x00\x04\x31\x05\x00\x87\xb2\xc8\x2c\xa0\x48\x81\xa2\x43\xbd\x46\x50\xaf\x70\xac\x9f\x85\x01\xae\xcf\x2b\x40\x60\xc5\x76\xd7\x54\xfa\x0c\x2c\x96\x00\xe1\xcd\x9f\x08\x10\x94\xcb\xf8\x41\x75\x50\x86\x09\x43\xe0\x88\x18\xea\x3a\x73\x10\xab\xa3\x48\x9e\xe3\x9c\xb5\x8d\x22\xe6\x31\xea\x0b\x72\x2e\xd6\x47\x43\xe9\xa3\x4c\x79\x91\x19\xa9\x8f\x46\x1a\xa3\xb9\x40\x82\x98\xdb\x28\xe5\x31\x1a\x97\xe0\xe8\xc1\xdb\x28\x33\xf7\xd1\x09\xcb\xac\xea\xa5\x8f\x2e\x3e\x46\x85\x27\x9c\x96\x3e\x1a\x70\x1e\xa3\xce\x33\xcf\x4b\x9f\x21\x84\xd4\x47\xb3\x09\x16\xb2\xbe\x8b\xe0\x83\xb2\x32\x81\x5a\xa4\xb9\x8f\x26\x10\x93\xf9\x2a\x87\xab\x7c\xd2\x4e\x3e\x00\x45\x2a\xff\x1d\x58\x81\xbd\xee\x0b\x1c\xbc\xf2\xff\xc2\xbf\xa3\x1f\xd4\x08\x0a\x04\xf5\xd9\x48\x11\x23\x48\xfb\x55\x04\xc1\x59\xb4\xd2\x12\x40\xd0\xc1\xb9\xae\x8e\x11\x75\xfd\xeb\x58\xe5\x5f\x9f\x75\x42\xe9\xbf\xd7\xb1\x48\x63\xa6\xf1\x7c\x44\xe0\x08\x85\x37\x7b\x42\x9a\x76\x7b\x42\xae\xea\x24\x21\xdd\xac\x4d\x0a\x95\xd6\xfe\xb9\x59\x03\x8f\x56\x90\x79\xbf\x42\xdd\xf1\xcf\x71\x4d\x4a\xa5\x1c\x60\x4b\x45\xcc\x7b\x2a\x12\xde\xa7\x62\xe5\xee\xc3\x15\xcc\xec\x86\x37\xae\xb6\xa7\xef\xde\xd8\x46\x5e\x76\x66\xaf\x67\xee\xdd\xac\xa1\xf7\x65\xe6\xf2\x60\x3c\xec\x75\xc8\xf9\x03\x74\xc2\xaa\xc3\x8e\xc0\x4e\x42\xce\x8e\x8e\x82\xb7\x7a\xe6\x20\x78\x95\x49\xb5\x87\x6e\x11\x32\xd7\xfb\xb1\x4b\x9a\x26\xac\x56\xed\x04\xed\x79\x0f\x30\xe6\xe8\x12\x6e\xf2\x23\xd7\x2a\x3f\x19\x12\x8d\xed\x9f\x0f\xbd\xc4\xe6\xf1\xfa\x5c\x29\x8f\xb9\xb8\xae\xad\x8d\x1f\x6d\xfd\x6a\x21\xd5\xbf\x4e\xc0\xb7\x76\xd8\xec\x61\x16\x88\xbe\xce\x7e\xfd\x7d\x62\x25\x94\xf7\xfa\xc9\xfc\x40\x3f\xbf\x63\x25\x2f\xe9\xb7\xa7\xb4\xb3\x20\xe6\xb2\xa7\x70\x9e\x7e\x86\xc2\x8d\x94\xa9\xea\xc7\xcd\x48\x8b\x7c\x58\x00\x9b\x54\x2b\x37\x03\x0c\xee\x77\x0e\x77\x59\xf6\xe8\xe8\x10\x79\xcc\x8b\x5b\xad\x76\xae\x72\xf5\xc0\x56\x57\xe8\x5e\xec\xa2\x0f\xd8\x9e\xa0\x0d\x47\x92\xdb\x57\x6f\xf8\xc8\x13\x1f\x7a\x44\xce\x61\xc7\xc9\x80\xf1\xe7\x3c\x22\xd2\x22\x3b\x79\x06\xb2\x3d\x15\xe1\x81\x3c\x8f\x34\x06\x25\xf0\x7e\x05\xf1\xfd\x0a\xbe\xfc\xe0\x3e\xa3\xe1\x9e\x8a\xb8\x8f\x3f\x61\xce\x6f\xee\x73\xa6\xb8\x5f\x21\xa5\xdd\x0a\x02\x3f\x60\xbb\x2b\x15\x04\xe4\xb7\xda\x78\x27\xf6\x3f\xd0\xc2\x4a\x67\xbd\xa3\x5a\x46\xf3\x9d\x54\xef\xa9\xdf\x3a\xc2\xac\xcf\xd5\x95\xfa\x55\x40\x09\xb1\x7f\x6f\x16\x55\xb1\x61\x1d\x59\xbd\x5f\x43\x8a\xd0\x69\x15\x70\xea\x54\x3d\xbf\xd3\x9b\x8c\x2a\x8f\xd4\xea\x5e\xc2\xd8\x4b\xe5\x9f\xd3\xcf\x47\x9b\xea\x09\xe4\xe2\x2f\xc6\xbe\x0f\x76\x57\x79\x5b\x21\xb6\x34\x04\x58\x79\x6a\x05\x3c\xb1\xc5\xe9\x5d\x90\x3d\xa8\x80\x50\xfd\xdb\x3e\x02\x2a\x50\xd8\x46\x48\x2b\x4a\x26\x1a\x35\x59\xd0\xa8\x99\x27\x02\x13\xcd\x3a\x6b\xd6\x62\xa6\x99\x40\x8b\x11\x81\x91\x8a\xa9\x16\x9d\x55\x34\x10\x28\x1a\x18\x18\x5d\x67\xb3\xa2\xc5\x54\xc5\xe8\x3b\xb4\x77\xed\x7a\xa0\x69\xcb\x2a\xd1\xf6\xf9\x01\x0c\xf1\x4c\xaa\xab\x3c\x1d\x25\x38\x56\x89\x02\x75\x2b\x77\xae\x92\x05\x42\x8b\x20\x22\xb0\xea\x6e\x8d\x15\x0f\xf5\x77\x58\xa3\xb6\x55\x81\xdb\xf7\x27\x2b\xf4\xa7\xae\x6b\x74\x04\x09\xea\xc8\x70\x66\xaf\xd5\x56\xf2\x12\xa1\xad\xb7\xc9\xce\xaa\xf5\xf8\xa9\x99\xac\x98\x01\xa2\xa4\x25\x9b\x64\x85\x82\x36\x93\xca\x62\x19\x92\x64\x8e\x49\x6c\x9a\x0b\x05\x9e\x13\xa3\x26\xcb\x92\xa8\xf8\xe2\x82\x66\xb8\x4c\x3a\xa5\x8b\xe7\x01\x2b\xb7\xfa\xf6\xbe\x2e\x75\x29\x7e\xd5\xa4\xa9\xe6\x30\xdd\x3f\xf0\x19\xbf\xf5\xc0\x9a\xef\x60\xf2\xb8\x7d\xc6\xf7\xcf\x9c\xf3\xd8\xd7\xb9\x30\x3d\xf6\x95\x9b\xbb\x96\x97\xee\xca\x07\x77\x3d\xf4\x5f\x6f\x50\xdf\x10\x97\x84\x86\x76\x1b\xe6\xad\xfe\x6f\xcc\x49\xc0\x0d\xf3\x50\x6c\xd1\xed\x14\x0e\xdb\xa3\x30\x7a\x75\x9d\x36\xee\xa9\x57\x07\x2a\x42\x6f\x28\x35\x56\x04\xd3\xee\xaf\xb9\x80\x84\xba\xbe\xb3\x50\xc4\x35\x06\x8e\xa7\xaa\x85\x34\x94\x17\x2f\xba\x43\x43\x77\x62\xcd\x1e\x9a\xd5\x0a\xc5\xc1\xc9\x35\xee\xd6\x59\xb1\xcd\x31\x89\x98\x57\x5a\x78\xe4\x07\x1d\x33\xce\x1b\xcc\x58\x75\xcf\x46\x64\xf3\x25\x7c\x89\x6c\xa7\xe2\x1a\x8e\x3c\x4c\x11\xa2\xf2\xe7\x22\x0e\xc6\xa3\x88\x53\xff\x9a\x2a\x6a\xd2\xb8\x8d\x2d\xf7\xe3\xc9\x8d\x65\x3f\x89\x12\x8d\xeb\xd4\x74\xa0\x0b\x6d\xb3\xff\xfc\xb7\xf7\x1f\x35\xa8\x68\xae\x77\x58\xb0\xf8\x9d\xfd\x0f\x04\x74\xca\x62\xff\xc1\x58\xd9\xb0\xde\xad\x04\x14\x61\x9a\x3e\xc9\x7f\x3f\xe4\xff\x17\x7d\x23\x50\x31\xd7\x68\x6c\xc1\xf8\xde\x7a\xc7\xfc\x2f\xe5\x08\xb1\x0e\x0c\x08\x83\x27\x33\x2d\x1f\xe4\xc9\x7c\x88\x02\x83\x16\x2d\x04\xba\x28\x6a\xb6\xb8\xe7\xd2\x96\x33\xaf\xf1\x24\x8c\x5a\xcb\xd6\x7f\x5f\x73\xde\x1b\xed\xc1\x35\xef\x10\xf8\x6d\x0d\x5e\x6b\x3e\x5d\x9b\xbb\xaf\xef\x28\x4c\xa4\xc5\xa8\xeb\xf5\xd3\xc8\x30\x8e\x0a\xce\x39\x7c\x38\x62\xce\x59\x74\x98\x50\x9c\x4e\xa3\x43\x42\x7e\x80\x0e\xf1\xf7\xd0\xa1\xa2\x86\xe6\x23\xdf\x40\x86\x3b\x7d\xbd\x8f\x0e\xe1\x9a\x3f\xb6\xcf\x53\xfa\xb7\x89\x35\x0b\xc6\x0f\xda\xb5\x9d\x8d\x35\x16\x14\x8d\xd4\x54\xec\x0e\x2f\xcf\xc4\x9a\x17\x7c\x1d\xae\x3c\xf9\xa8\xff\x97\x43\x9e\xe4\xe6\xe9\x9e\xf8\xb7\x77\x78\xe2\xc0\xbf\x9c\xa1\x3e\xf6\x25\x8a\x90\x83\x8a\x35\xdf\xd3\x3c\xf0\xaf\xd1\xfa\x90\x4a\x99\x87\xb6\xe4\xfc\xc9\xfa\xc8\xf2\x06\x5a\xe8\x15\x12\xd5\xd2\xef\x52\x23\x50\xd6\x52\x11\xdc\xb6\x3e\x62\xa4\xa8\x6c\x61\x54\x53\xb0\xce\x5c\xbf\xbd\xea\xc5\x5e\xa9\x8f\x04\x62\xee\xa3\xd7\x6c\xe3\xd5\x73\x24\xf3\x37\x4e\x77\x47\x05\x08\xbc\xf2\xf1\xa7\x74\x48\x9f\x9d\x3b\x0f\x0a\x30\x7c\x3d\x9b\xec\xe7\x33\xce\xc0\xc0\x6b\x26\x16\x46\x8e\xdf\x2b\x9c\xf7\xce\x7e\xaa\xf5\x52\x8d\xd4\x2b\x32\x2b\x93\xd5\x0c\x51\x70\x68\x08\xac\xb5\xfd\x9b\xf3\x9f\xf6\x0c\x70\xa5\xa0\x3e\x73\xad\x5a\xee\xcf\x76\xbc\xe6\x04\x24\x58\x6d\xc3\x43\xfb\x0b\x4e\x68\x2e\x42\x37\x27\x06\x20\x0f\x24\xdd\x32\x4c\x18\x9e\x97\x7b\x35\xec\xc9\xd9\xc1\x03\x64\xfe\x7a\x35\xe3\xde\xd8\x8a\xe6\x5b\x22\xfb\x39\x6f\x5e\x0e\xed\x33\x98\x18\xb4\xf8\xc6\x8a\x16\x7a\xbd\x72\x58\x6c\xb5\x55\xae\xd1\xaf\x67\x59\xaf\x7a\xf3\x0c\xf7\x6a\x0f\x81\x9e\x9f\xc6\x9e\xf3\xa9\x1b\x19\x61\x0d\x91\x87\x31\x15\x89\x39\x76\x2d\xfb\xf2\x7c\xd3\x8b\xfd\xd8\x97\x33\xd8\x53\xa7\x06\xdb\xf3\xdc\x0b\x2e\x7f\x53\xf3\x6e\x11\xf5\x1d\xc4\xbc\xe3\xea\x06\xd9\xde\xe1\xf8\xb6\xd2\x4a\xfb\xd9\xfd\x76\xf6\xd7\x77\x7d\x5d\xf5\x0c\xa7\xb6\xd4\x84\x1d\x35\x98\xce\xe0\x76\x05\xdd\xcf\xb0\x9c\x9b\xc1\xf7\x33\xe4\x33\xb5\xeb\xe9\x30\xc3\xf9\x24\x47\xd3\x96\x1a\xea\x5e\x7b\xeb\xc3\x15\x91\x74\x1e\xb9\x12\x12\x8b\xf7\x33\xf9\x9e\x69\xf9\x25\x7b\xb3\x62\x4b\x9c\x53\x91\xa4\x69\x99\x96\xcc\xd1\x27\x0d\x13\x30\x08\x4f\xd1\xc9\x05\x53\xca\x13\xc1\x92\x9c\x6c\x99\x13\x32\x98\x84\x39\x66\xf3\x64\x89\x71\xba\xa9\x56\x6f\xbd\xcb\x1b\x59\xc9\x51\x3e\xe2\xd0\x7d\x53\xdd\xd7\x25\x37\x41\xa4\x65\xf9\x52\x11\x3c\x95\x93\x5d\xb3\x14\xac\x71\xeb\x73\x18\x0b\x4f\x57\xc4\x06\x9a\xba\x22\xa8\x9e\x01\x36\x1c\xc5\x37\x18\xeb\x01\x6a\x3f\x2b\x89\x83\x33\x28\x3a\x5f\x7f\xfd\x04\x66\xbe\xc8\x33\xd8\x07\x63\x32\x1d\x56\x38\xef\x63\xe3\x1b\x69\xa6\x86\x84\x51\x83\xc5\xad\x3c\x1b\xde\x0e\x35\x4b\x55\x56\x3f\x6f\x5b\x2f\xca\x13\x2f\x32\xfd\xb5\x3c\xe8\x75\x9f\x7c\xf6\x5c\xae\x84\x34\x4b\x08\x3c\x67\x55\x2d\x6e\x34\x27\x9f\x4c\x28\x72\x8e\x31\x13\x41\x98\xaa\x19\x65\xc9\x33\x2f\xb4\x04\x97\xc5\x55\x0b\x65\xe4\x64\x79\x0a\xb7\x95\x97\xef\x48\xe3\xc4\xb9\xdc\x6f\x22\xdb\x51\xa7\x40\x29\xf6\xa7\x6a\xb2\x7b\x0c\x9b\xab\x5d\x11\x54\xb9\xb6\x73\xfb\xf0\x80\xd3\xff\xca\x3a\xc5\x90\x82\xce\x9f\xcc\x2f\xa6\xf3\xf9\xff\xb3\x6c\xfe\x25\x29\x10\x44\x9e\xfc\x17\x35\x3e\x10\x5c\xf2\x5d\x34\xfb\x20\x16\x38\x3e\x1d\xbb\xa3\xf5\x62\x6e\x70\xbf\x76\xf2\xa2\xd6\x77\x3e\x3f\xeb\xb7\xbb\xc7\x67\xee\xdf\xff\x5e\xad\xec\x12\xf7\xfd\x93\xbd\x44\xc7\xb6\x72\x47\x76\x37\xd6\xf3\x86\xad\x74\x7e\xbc\x67\x27\xbf\x2e\xbf\x53\x3d\x43\xef\xe9\xe8\xc8\x11\x7f\xf2\x2c\xe9\xa7\xb2\xa8\x67\xba\xf1\xaa\xbe\xbe\x80\x2d\x10\xa3\xc5\x9b\xbc\xe9\x0f\xa3\x79\xc5\xca\xa3\x0f\x62\xf9\xc3\xd3\x92\x43\x2c\xbf\x62\x92\x86\x14\x6f\xfa\x03\xdf\x46\x8d\xb7\xf2\x3d\xea\x0f\xfc\x0f\xcb\xbf\x88\xe5\x83\xca\xff\x0d\x96\x9f\x97\xbf\xd5\x5f\xf1\x13\x58\xfe\x3b\x11\xe3\x61\x2f\xe0\x05\x5b\x24\xcb\x7f\x1c\x5b\x88\x55\x3d\x66\x13\xdb\xf5\x06\xfc\x0b\x71\xf8\xc2\xfa\x1f\x0e\x7f\xa2\xb1\x0f\x3b\x61\xd7\xcf\xef\x48\xf1\x71\x07\xed\xb6\x6f\xab\xc9\x29\xc3\x27\xf3\xd3\x63\xcf\x52\x33\xd1\x62\x75\x7c\xe9\xdd\xfc\xd6\xcf\xc1\xa2\xb1\xaa\xc6\x5b\x59\xfd\x38\xe6\x7e\xe3\xc4\xe1\x4d\xad\xf8\x47\xba\x95\x4f\x9d\x4a\xbf\xcb\x13\x5a\x7b\x99\xc7\x19\xf4\xcb\xdd\xca\x58\x30\x6e\xbb\x95\x31\xb7\x37\xfc\x0e\xba\x95\xdb\x53\xdf\xec\x56\xc6\x5c\xd2\xe3\x6e\xe5\x55\x73\x00\xae\x6f\x15\x03\xf7\x13\x27\x57\x99\xca\xd0\xad\x61\x31\x25\x7d\xb0\x27\xea\x85\x37\x5e\x9e\x47\x92\x58\x11\xee\xe5\x0d\x18\xb9\xed\xe8\xd8\x47\x9a\xb3\xb4\x1f\x21\xda\x1f\xcb\xb6\x9e\x44\xcb\x33\xb4\x1f\xa2\xbf\xc6\xad\x67\x6f\x58\x3c\x7b\xa3\xeb\x5c\xbf\xe2\xb9\xcc\x7e\xed\x60\x20\xc8\xf3\x5f\x42\x36\x37\x92\x29\xff\x44\x85\xb1\x72\xd2\x8a\x74\x3d\xaf\x73\x06\x8b\x06\x2a\xe7\x76\x66\x76\xb6\x3f\xe8\xac\xf7\x55\x26\x8a\xe4\x8b\xce\xfd\x2d\xec\xb6\x0f\xde\x76\x9e\x7e\xe7\x7f\xa0\xb8\xf4\x2a\x75\xd9\x7c\xe2\x1d\xf4\x4f\xd4\x14\x2e\x3d\x4f\x77\xbd\xaf\x39\xf0\x8c\xd2\xe3\x07\x61\xf9\xf2\x7e\x6e\xf5\xcd\x97\xab\x04\xb3\x18\x2f\xe3\x54\x20\xf7\x6f\xe3\xbe\xeb\xef\xbf\x46\x97\x3c\x4d\x3c\x87\xe0\xff\xe9\xd2\xab\x6b\x9c\xd2\x25\xc6\xe5\x89\x2e\x31\xe3\x6b\xba\xb4\xa9\x0f\x50\xc3\x41\xc3\xff\xf7\xb7\x77\x86\x87\x66\x01\xb1\x92\x65\x86\x10\xfb\xbb\xf4\xe3\xe9\x57\xf1\xd3\x3d\xd4\x73\x7d\xcf\xac\x21\xac\xf6\xff\xc7\x38\xad\xd8\x8a\x38\xc6\xde\xf7\xd7\xe8\xa9\xa8\x8e\xbd\xae\x60\x2e\xd2\x68\x4a\xb6\x52\x00\xa3\x37\xa6\x5e\x71\xc2\xf5\xaa\x45\x6c\xdd\x2a\xf5\x1e\x44\x1c\xe3\xd5\xbd\x53\xeb\x26\x94\x2b\x4a\xdb\xe0\x2e\x24\x9e\x9a\xc7\x5e\xfb\x56\xea\xc8\x12\xd6\x8e\x96\xe5\xda\xd1\xd2\xaa\x99\xc4\x65\x6a\xfc\x98\x5b\x17\xe1\x58\xa5\xe8\x90\xcd\x8a\x89\xc7\x7b\xa8\x80\x6d\x8e\xbc\x9d\xa3\x7e\x02\x4c\xa8\xa2\x64\x93\x4d\x46\x0c\xe2\x04\x8b\xab\x17\x4c\x29\xe4\x39\x85\x64\x71\x0a\x93\x83\x94\x12\x73\x20\x20\x0e\x86\x93\x4d\x3a\xc5\xc0\x01\x52\x92\x1c\x70\xc9\x53\x24\x67\x82\xa2\x71\x29\x95\xf5\xff\x0b\x00\x00\xff\xff\x5f\xd5\xfd\x8d\x92\x48\x00\x00")

func compiledExecutorBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBin,
		"compiled/Executor.bin",
	)
}

func compiledExecutorBin() (*asset, error) {
	bytes, err := compiledExecutorBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExecutorBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5c\x0d\x96\xf2\x2a\x0f\xde\x52\x12\xc8\x0f\xcb\x69\x29\xec\x7f\x09\xdf\x09\x50\xad\x53\xb5\xd6\xb9\xe3\xcc\x3d\xdf\x1d\xcf\xab\x1e\x6c\x21\xe4\xf7\x49\x48\x5f\x01\x03\x81\x08\x4c\x02\x10\x83\x20\x08\x02\x4c\x95\x55\x00\x20\xb0\x66\x40\x78\xf3\x2f\x01\x44\x09\x75\xfc\xa1\x18\x48\x80\x09\x63\x0c\x09\x31\xfa\x3a\x73\x64\xf5\x51\x24\x2b\x69\x2e\xd2\x46\x11\xcb\x18\xb5\x05\x43\xa9\xda\x47\x63\xed\xa3\x81\xca\xc2\x33\x52\x1f\x4d\x34\x46\x4b\x85\x0c\xa9\xb4\x51\x2a\x63\x34\x2d\xd1\xd0\xa2\xb5\xd1\x10\x42\x1f\x9d\xb0\xce\x22\x56\xfb\xe8\x62\x63\x94\xc3\x84\xd3\xd2\x47\x23\xce\x63\xd4\xc2\x1c\xe6\xa5\xcf\x10\x63\xee\xa3\x45\x19\x2b\x69\xdf\x45\xb4\x41\x59\x9d\x40\x34\xd1\xdc\x47\x33\xb0\xf2\xec\x5c\x34\xa8\x0b\xcf\x21\x1a\x20\xfb\xae\xfd\x97\xeb\x38\x37\x8e\x57\x76\xfe\x1b\x04\x81\x60\xbe\x2f\x30\x30\xe7\xff\x85\x7f\x47\x7f\x28\x09\x04\x08\xfc\xde\x44\x09\x13\x70\x7b\x09\x02\xe3\xcc\xe2\xb4\x44\x60\x34\xb0\xe0\xab\x63\x42\x59\x3f\x0d\x5d\xfe\x7e\xaf\x11\x72\x7f\x5d\xc7\x12\x8d\x99\xc6\xfd\x09\x21\x24\xa8\x61\xb3\x27\xa4\x69\xb7\x27\x0c\xae\x4e\x1c\xf3\xcd\xda\x24\xe0\xb4\xf6\xf7\xcd\x1a\x78\xb4\x02\xcf\xfb\x15\x7c\xc7\x3f\xc7\x35\xae\x4e\x39\xc0\x96\x8a\x54\xf6\x54\x64\xbc\x4f\xc5\xca\xdd\x87\x2b\xa8\xea\x0d\x6f\x4c\x74\x4f\xdf\xbd\xb1\x8d\xbc\xf4\xcc\x5e\xcf\x5c\xbb\x59\x43\xee\xcb\xcc\xf8\xc1\x78\xdc\xeb\x90\x85\x0f\xd0\x09\xab\x0e\x1b\x42\x30\x62\xb2\x60\x68\xc8\x78\xab\x67\x06\x8c\x57\x99\xb8\x3d\x74\x8b\xe0\xd9\xaf\xc7\x2e\x69\x9a\xd0\xad\xda\x08\xda\xfd\x16\x61\xcc\xd1\x25\xdc\xe4\x47\x26\x2e\x3f\x1e\x12\x4d\xed\x9f\x0d\xbd\xc4\xe6\xf1\xfa\x5c\xb9\x8c\xb9\x82\xaf\x2d\x8d\x1f\x6d\x7d\xb7\x10\xf7\xaf\x13\x84\x5b\x3b\x6c\xf6\x30\x33\x24\x5b\x67\xbf\xbe\x9e\x58\x09\x95\xbd\x7e\x86\xf0\x40\x3f\xbf\x63\x25\x2f\xe9\xb7\xe5\xbc\xb3\xa0\x10\xea\x9e\xc2\x79\xfa\x19\x0a\x37\x52\x26\xd7\x8f\x9b\x91\x16\xf9\xb0\x02\x36\xa9\x3a\x37\x23\x0c\xee\x77\x0e\x77\x59\xf6\xe8\x68\x90\xc2\x98\x17\xb7\x5a\x6d\xc1\xe5\x6a\x31\xa8\xaf\xd0\xbd\xd8\x45\x1f\xb0\xdd\x41\x1b\x8e\x64\xd3\xaf\xde\xf0\x91\x27\x3e\xf4\x88\xa1\xc4\x1d\x27\x23\xa6\x9f\xf3\x88\x48\x0b\xef\xe4\x19\x49\xf7\x54\xc4\x07\xf2\x3c\xd2\x18\xe4\x18\xf6\x2b\xb0\xed\x57\xb0\xe5\x07\xf7\x99\x14\xf7\x54\xa4\x7d\xfc\x89\x73\x79\x73\x9f\x33\xa5\xfd\x0a\x39\xef\x56\x60\xf8\x01\xdb\x5d\xa9\x20\x20\xbb\xd5\xc6\x3b\xb1\xff\x81\x16\x3a\x9d\x7e\x85\x5b\x46\xf3\x9d\xe4\xd7\xf8\x37\x6a\xef\x7e\x9f\xaf\xd4\x7f\x05\xe4\x98\xfa\xf7\x66\x51\x8e\x0d\x7d\x64\xf5\x7e\x0d\x29\x42\xa7\x95\xc1\xa8\x53\xf5\xfc\x4a\x6b\x32\x72\x1e\x89\xfa\x5e\xe2\xd8\x8b\xf3\xcf\xe8\xe7\xa3\x8d\x7b\x02\xbe\xf8\x8b\xb1\xef\x83\xdd\x39\x6f\x1d\x62\x73\x43\x80\xce\x53\xad\x60\x39\x68\x9a\xde\x05\xd9\x83\x0a\x88\xee\xdf\xf6\x11\x50\x80\xe2\x36\x42\x6a\x15\x52\x96\x24\x59\xa3\x24\x29\x61\x22\x50\x96\x22\xb3\x14\xa9\xaa\x52\x08\xa4\x2a\x11\x28\x09\xab\x48\x95\x59\x58\x22\x81\xa0\x82\x82\xd2\x75\x36\xad\x52\x55\x84\x95\xbe\x43\x7b\xd7\xae\x07\x9a\xb6\xac\x12\x6d\xef\x1f\xc0\x10\xcf\xa4\xba\xca\xd3\x90\xa3\xa1\x4b\x14\xa8\x5b\xb9\x05\x97\x2c\x10\x6a\x02\x66\x86\x55\x77\x3d\x56\x3c\xd4\xdf\x61\x8d\xd2\x56\x85\xd0\xbe\x3f\x59\xa1\xdf\x75\x5d\xa3\x23\x48\x10\xc3\x00\x67\xf6\xea\xb6\x52\x96\x04\x6d\xbd\x4d\x76\xe6\xd6\x63\xa7\x66\xd2\xaa\x0a\x88\x9c\x97\xa2\x5c\x04\x2a\xea\x4c\xc2\x8b\x16\xc8\x5c\x42\xca\xac\xd3\x5c\x29\x86\x39\x07\x94\xac\x85\x33\x55\x5b\x8c\x51\x15\x97\x49\xa6\x7c\xf1\x3c\xa0\xf5\x56\xdf\xde\xd7\xa5\x2e\xc5\xaf\x9a\x34\x79\x0e\xd3\xfd\x43\x38\xe3\xb7\x1e\x58\xf3\x1d\x4c\x9e\xb6\xf7\xd8\xfe\x9e\x73\x1e\xfb\x3a\x17\xe6\xc7\xbe\x72\x73\xd5\xf2\xd2\x55\xe5\xe0\xaa\x87\xfe\xeb\x0d\xea\x1b\xe2\xe2\xd8\xd0\x6e\xc3\xbc\xee\xff\xc6\x9c\x04\xa1\x61\x1e\x4a\x2d\xba\x9d\xc2\x61\x7b\x14\x46\xaf\xae\xd3\xc6\x2d\xf7\xea\x80\x23\xf4\x86\x52\x93\x23\x98\x76\xbd\xe7\x02\x1c\x7d\x7d\x0b\x4c\x09\xd7\x18\x38\xee\x72\x0b\x69\x28\x2f\x5d\x74\x87\x86\xee\x24\xcf\x1e\x9a\xd5\x32\xa5\xc1\xc9\x35\xee\xfa\xac\xd8\xe6\x98\x98\xd5\x9c\x96\x30\xf2\x83\x8e\x19\xe7\x0d\x66\x74\xdd\xd3\x11\xd9\x6c\x89\x5f\x22\xdb\xa9\xb8\x86\x23\x0f\x13\x84\x24\xe1\x73\x11\x07\xd3\x51\xc4\xf1\x4f\x15\x41\xc9\x92\xb6\xb1\xe5\x7e\x3c\xb9\xb1\xec\x27\x51\xa2\x71\x9d\x9a\x0e\x74\xa1\x6d\xf6\x5f\xfe\xf6\xfe\x93\x44\x61\x29\x7e\x85\x46\x4d\xdf\xd9\xff\x40\x40\xa7\x2c\xf6\x1f\x8c\x95\x0d\xeb\xdd\x4a\x40\x10\xa6\xe9\x93\xfc\xb7\x43\xfe\x7f\xd1\x37\x02\x61\x35\x49\x1a\x34\x6a\xb8\xb7\xde\x31\xff\x6b\x3d\x42\xac\x03\x03\xc2\xe0\xc9\x4c\xcb\x07\x79\x32\x1f\xa2\xc0\x28\x55\x2a\x81\x2c\x82\x52\x34\xed\xb9\xb4\xe5\xcc\x6b\x3c\x89\xa3\xd6\xb2\xf5\xdf\xd7\x9c\xf7\x46\x7b\x70\xcd\x3b\x18\x7e\x5b\x83\xd7\x9a\x4f\xd7\xe6\xee\xeb\x3b\x0a\x63\x6e\x31\xea\xfa\xfb\x69\x64\x98\x46\x05\xe7\x1c\x3e\x1c\x31\xe7\x2c\x3a\xcc\xc8\x46\xa7\xd1\x21\x61\x78\x80\x0e\xf1\xf7\xd0\xa1\xa0\xc4\xe6\x23\xdf\x40\x86\x3b\x7d\xbd\x8f\x0e\xe1\x9a\x3f\xb6\xf7\x53\xfa\xb7\x89\x35\x0b\xa6\x0f\xda\xb5\x9e\x8d\x35\x1a\x05\x95\x44\x85\xf5\x0e\x2f\xcf\xc4\x9a\x17\x7c\x1d\xae\x3c\xf9\xa8\xff\xe7\x43\x9e\x94\xe6\xe9\x9e\xf8\xb7\x77\x78\x62\x10\x7e\x39\x43\x7d\xec\x4b\x04\xa1\x44\x61\x6d\xbe\xa7\x79\xe0\x5f\xa3\xf5\x21\x95\x3c\x0f\x6d\x29\xe5\x93\xf5\x91\xe5\x0d\xb4\xd0\x2b\x24\x22\xb5\x5f\x25\x4a\x20\x41\xaa\x23\xb8\x6d\x7d\x44\x49\x50\x82\xc6\x51\x4d\x41\x9f\xd9\xbf\xbd\xea\xc5\x5e\xa9\x8f\x44\x0a\xa1\x8f\x5e\xb3\x8d\x57\xcf\x91\xd4\xde\x38\xdd\x1d\x15\x20\x30\xe7\xe3\x4f\xe9\x90\x3c\x3b\x77\x1e\x14\x60\xfc\x7a\x36\xd9\xcf\x67\x2c\x40\x80\xb0\x66\x62\x71\xe4\xf8\xbd\xc2\x79\xef\xec\xc7\xad\x97\x3c\x52\xaf\xc8\xac\x4e\xea\x19\x22\xe3\xd0\x10\x58\x6b\xfb\x37\xe7\x3f\xed\x1e\x08\x4e\x81\xdf\x73\xad\x5a\xee\xcf\x76\xcc\x73\x02\x62\x74\xdb\xb0\xd8\x3e\xc1\x08\xd5\x98\xe9\xe6\xc4\x00\xf8\x81\xa4\x5b\x86\x09\xc3\xf3\x86\x5e\x0d\x7b\x72\x76\xf0\x00\x99\xbf\x5e\xcd\xb8\x37\xb6\xa2\xf9\x96\xc8\x7e\xce\x9b\xd7\x43\xfb\x8c\xca\x0a\x2d\xbe\x05\x41\x8d\xbd\x5e\x39\x2c\xd6\x6d\x35\x78\xf4\xeb\x59\xd6\xab\xde\xbc\xc0\xbd\xda\x43\xa4\xe7\xa7\xb1\xe7\x7c\xea\x46\x46\xe8\x21\xf2\x30\xa6\x22\x85\x90\xba\x96\x7d\xb9\xbf\xe9\xc5\x7e\xec\xcb\x19\xec\xa9\x53\x83\xed\x79\xee\x05\x97\xbf\xa9\x79\xb7\x88\xfa\x0e\x62\xde\x71\x75\x83\x6c\xef\x70\x7c\x5b\x69\xa5\xfd\xec\x76\x3b\xfb\xeb\xbb\xbe\xae\x7a\x86\x53\x5b\x6a\xe2\x8e\x1a\xcc\x67\x70\xbb\x80\xec\x67\x58\xce\xcd\x60\xfb\x19\xca\x99\xda\xf5\x74\x98\xe1\x7c\x92\xa3\x79\x4b\x0d\x75\xaf\xbd\xf5\xe1\x82\x48\x32\x8f\x5c\x09\x29\xb0\xf5\x33\xf9\x9e\x69\xd9\x25\x7b\xd3\xaa\x4b\x9a\x73\xe5\x2c\x79\x99\x96\x12\x92\x4d\x12\x27\x08\xc0\x61\x4a\x46\xc6\x98\x73\x99\x08\x96\x6c\xa4\xcb\x9c\x31\x80\x72\x9c\x53\x51\xcb\x9a\x03\x4e\x37\xd5\xea\xad\x77\x79\x23\x2b\x39\xca\x47\x0c\xba\x6f\xf2\x7d\x5d\x72\x13\x44\x5a\x96\x2f\x15\xc1\x53\x39\xd9\x35\x4b\x41\x8f\x5b\x9f\xc3\x58\x78\xba\x22\x36\xd0\xd4\x15\x41\xf5\x0c\xb0\xe1\xa8\x70\x83\xb1\x1e\xa0\xf6\xb3\x92\x38\x38\x83\xa2\xf3\xf5\xd7\x4f\x60\xe6\x8b\x3c\xa3\x7e\x30\x26\xd3\x61\x85\xf3\x3e\x36\xbe\x91\x66\x6e\x48\x18\x25\x6a\xda\xca\xb3\xe1\xed\xe8\x59\xaa\x04\xb1\xf3\xb6\xf5\xa2\x3c\xf1\x22\xd3\x5f\xcb\x83\x5e\xf7\xc9\x67\xcf\xe5\x6a\xcc\x33\xc7\x18\xe6\x22\x22\xd5\x94\xe6\x6c\x93\x32\xa5\x50\x52\x2a\x44\x10\x27\x37\xa3\xc2\x65\x0e\x0b\x2d\xd1\x78\x31\x91\x4a\x05\x43\xd6\x32\xc5\xdb\xca\xcb\x77\xa4\x71\xe2\x5c\xee\x37\x91\xed\xa8\x53\x20\x57\xfd\x53\x35\xd9\x3d\x86\x2d\x6e\x57\x04\x2e\xd7\x76\x6e\x1f\x1f\x70\xfa\x5f\x59\xa7\x18\x52\x90\xf9\x93\xf9\xc5\x74\x3e\xff\x7f\x96\xcd\xbf\x24\x05\x82\x14\x26\xfb\x45\x8d\x8f\x04\x97\x7c\x17\x55\x3f\x88\x05\x8e\x4f\xc7\xee\x68\x3d\xab\x29\xdc\xaf\x9d\xbc\xa8\xf5\x9d\xcf\xcf\xfa\xed\xee\xf1\x39\xf4\xef\x7f\xaf\x56\x76\x89\xfb\xf6\xc9\x5e\xa2\x63\x5b\xb9\x23\xbb\x1b\xeb\x79\xc3\x56\x3a\x3f\xde\xb3\x93\x5f\x97\xdf\xa9\x9e\xa1\xf7\x74\x74\xe4\x88\x3f\x79\x96\xf4\x53\x59\xd4\x33\xdd\x78\x55\x5f\x5f\xc0\x16\x88\x49\xd3\x4d\xde\xf4\x87\xd1\xbc\xa0\xf3\xe8\x83\x58\xfe\xf0\xb4\xe4\x10\xcb\xaf\x98\xa4\x21\xc5\x9b\xfe\xc0\xb7\x51\xe3\xad\x7c\x8f\xfa\x03\xff\xc3\xf2\x2f\x62\xf9\x28\xfc\x7f\x83\xe5\xe7\xe5\x6f\xf5\x57\xfc\x04\x96\xff\x4e\xc4\x78\xd8\x0b\x78\xc1\x16\x59\xcb\x1f\xc7\x16\xac\xae\xc7\x41\x59\x77\xbd\x01\xff\x42\x1c\xbe\x04\xf9\x0f\x87\x3f\xd1\xd8\x87\x9d\xb0\xeb\xfb\x77\xa4\xf8\xb8\x83\x76\xdb\xb7\xd5\xe4\x54\xe0\x93\xf9\xe9\xb1\x67\xf1\x4c\xb4\xaa\x8f\x2f\xbd\x9b\x5f\xfb\x39\x58\xd2\x20\x22\xe9\x56\x56\x3f\x8e\xb9\xdf\x38\x71\x78\x53\x2b\xfe\x91\x6e\xe5\x53\xa7\xd2\xef\xf2\x84\xd6\x5e\xe6\x71\x06\xfd\x72\xb7\x32\x56\x4c\xdb\x6e\x65\x2c\xed\x09\xbf\x83\x6e\xe5\x76\xd7\x37\xbb\x95\xb1\xd4\xfc\xb8\x5b\x79\xd5\x1c\x80\xeb\x53\xc5\x10\xfa\x89\x93\x09\x4f\x75\xe8\xd6\xb0\x98\x9a\x3f\xd8\x13\xf5\xc2\x13\x2f\xcf\x23\x49\x72\x84\x7b\x79\x02\x86\x6f\x3b\x3a\xf6\x91\xe6\x2c\xed\x47\x88\xf6\xc7\xb2\xad\x27\xd1\xf2\x0c\xed\x87\xe8\xaf\x71\xeb\xd9\x13\x16\xcf\x9e\xe8\x3a\xd7\xaf\x78\x2e\xb3\x5f\x3b\x18\x08\xca\xfc\x97\x90\xcd\x8d\x64\xea\x3f\x51\x61\x74\x4e\x6a\xe5\xae\xe7\x3e\x67\xd4\xa4\x20\x7c\x6e\x67\xaa\x67\xfb\x83\xce\x7a\x5f\x09\x44\x89\x6c\x91\xb9\x3f\x85\xdd\xf6\x11\xb6\x9d\xa7\xdf\xf9\x1f\x28\x2e\xbd\x4a\x5d\x36\x9f\x78\x06\xfd\x13\x35\x85\x4b\xcf\xd3\x5d\xef\xab\x06\x61\x46\xee\xf1\x83\xb0\x7e\x79\x3e\xd7\x7d\xf3\xe5\x57\x82\x99\x35\x2c\xe3\x54\xa0\xf4\x6f\xe3\xba\xeb\xeb\x5f\xa3\x4b\x96\xa7\x30\xc7\x68\xff\xe9\xd2\xab\x6b\x9c\xd2\xa5\x80\xcb\x13\x5d\x0a\x01\x5f\xd3\xa5\x4d\x7d\x80\x1a\x0e\x1a\xfe\xbf\x3f\xbd\x33\x3c\x74\x60\x60\xad\x85\x67\x88\xa9\x3f\x4b\x3f\xee\x7e\x15\x3f\xdd\x43\x3d\xd7\xe7\xcc\x1a\xc2\x6a\xff\x7f\x8c\xd1\x8a\xad\x28\xa4\xd4\xfb\xfe\x1a\x3d\x8e\xea\x82\xf9\x0a\x6a\xcc\x8d\xa6\xac\x2b\x05\x30\x7a\x63\xfc\x17\x23\x5c\x7f\xd5\x84\xad\x5b\xc5\xaf\x41\xc4\x31\xee\xee\x9d\x5a\x37\x21\x5f\x51\xda\x06\x77\x21\x85\xa9\x79\xec\xb5\x6f\xc5\x47\x96\xb8\x76\xb4\x2c\xd7\x8e\x96\x56\xcd\xa4\x50\xa7\xc6\x8f\xb9\x75\x11\x8e\x55\xaa\x0c\xd9\xac\x98\x78\x3c\x87\x0a\xd8\xe6\x28\xdb\x39\xfc\x1d\x60\x42\x61\x21\x9d\x74\x52\x0a\xc0\x46\xb0\x98\x58\xc5\x9c\x63\x99\x73\xcc\x9a\xa6\x38\x19\x70\xad\xa9\x44\x02\x0a\x51\x71\xd2\x49\xa6\x14\x43\x84\x9c\xb9\x44\x5c\xca\x94\xc8\x02\x41\x95\xb4\x54\x67\xfd\xff\x02\x00\x00\xff\xff\xa1\x85\x02\x7f\x52\x48\x00\x00")

func compiledExecutorBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExecutorBinRuntime,
		"compiled/Executor.bin-runtime",
	)
}

func compiledExecutorBinRuntime() (*asset, error) {
	bytes, err := compiledExecutorBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Executor.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\xd3\x41\x4b\xc3\x30\x14\x07\xf0\xef\xf2\xce\x39\x4d\x1d\x92\xa3\xe8\xc1\x83\x20\x6e\xe0\x61\xf4\xf0\xd2\xbe\x4a\x68\x9a\x84\xe4\x65\x2e\x8c\x7d\x77\x69\x99\x5b\x0f\xe2\x2a\xa2\xed\xad\xd0\xfc\x79\x3f\xfe\xbc\xb7\xd9\x43\xe9\x6c\x64\xb4\x0c\x92\x43\x22\x01\xda\xfa\xc4\x11\xe4\xa6\x10\x60\xb1\x25\x90\xc0\x8e\xd1\xac\x92\xf7\x26\x83\x00\x97\xf8\xf8\x62\xff\xf9\x00\x04\x70\xf6\xdd\x57\xd2\x96\x17\x37\x4b\x38\x14\x02\x3c\x66\x54\x86\x40\xd6\x68\x22\x09\x88\x8c\x4c\x4f\x89\x51\x69\xa3\x39\x83\x84\xad\xa6\xf7\x73\xb6\x4e\xb6\x64\xed\x2c\x1c\xc4\x37\xac\xd3\xd0\x0a\x19\xcf\x61\x95\x99\x62\x3f\xf6\xf8\x5b\x19\x6c\x68\xa1\x3a\xcc\x05\x73\x1f\xbd\x5a\xfc\x87\xd9\xa6\xf6\xeb\xae\x4e\x68\x57\x36\x6b\xdd\xd2\x8c\x7a\x1e\x65\x5e\xe9\x37\x4b\xe1\x92\x1a\xab\x2a\x50\x8c\xb3\x51\xaf\xfb\xc5\x2e\x5d\x18\xd5\xf7\xf2\xfa\x0f\xe1\x83\x6b\xdb\x3d\xec\xbc\x0e\xd8\x67\x26\x5f\x83\xa1\xeb\xf1\x7e\xfa\x53\x1a\x7a\x9e\x83\xdb\x52\xf5\xea\x42\x33\x7d\x4f\x3f\x5b\xbc\xb9\x35\x79\xd7\xa1\x5e\xa8\x1e\xa5\xba\xfd\x25\xaa\xf8\x08\x00\x00\xff\xff\x20\x8c\x4d\x0b\x76\x06\x00\x00")

func compiledExtensionAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionAbi,
		"compiled/Extension.abi",
	)
}

func compiledExtensionAbi() (*asset, error) {
	bytes, err := compiledExtensionAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x0b\x56\xeb\x3a\x0c\xdc\xd2\x48\xb2\x64\x79\x39\xfe\xee\x7f\x09\xef\x38\x4e\x29\x6d\x78\xe5\x26\x97\x0b\x87\x72\xa0\x74\x6c\xeb\x33\x9a\x48\xae\xc1\x61\x08\x50\x96\xe0\x20\x35\x02\x08\x1a\x0d\x80\x63\x34\x2d\x0a\x23\x14\x6a\x3e\xdf\xc1\x98\x2b\x92\xe6\xdf\x21\xc0\xfd\xbc\x01\x41\x8c\xb6\x5d\x39\x2c\x0b\xa2\xb1\x82\x70\xf1\x95\x80\x60\x32\xf6\x17\x99\xc3\x84\x9c\x0c\xad\x35\x0a\x9b\x9f\xa4\x71\xa2\x12\x39\xa8\x53\x58\x68\x0b\x3b\x5a\x1c\xbd\x67\xde\x50\xd2\x7d\x6f\xc0\x48\x23\x8f\xbe\xd0\x94\x77\x94\x46\x42\x64\xda\x50\x46\x5c\xa8\x41\xdb\xd0\x54\x17\xaa\x75\xa1\x29\x57\x95\x56\xca\x42\x7d\xdf\x5b\xcb\xb0\xd6\xea\xb2\xcb\x65\xb7\xdb\x94\x63\x97\xb0\x22\xe3\xae\x0b\xed\x0e\x55\x97\xe5\x4d\xb8\x6b\xd4\x72\x67\xfc\x5e\x89\xa2\x87\x4a\xa0\xf4\x79\xc6\x87\xda\x3c\x13\xa0\xe4\x70\x76\x9a\x15\x60\x80\x12\x29\x14\xb7\x95\x44\x90\x84\x21\xef\xad\xf6\x63\x7d\x49\xa6\xff\xe0\x10\x83\xf8\xe4\x05\x0e\x87\x68\xc2\x6e\x15\xce\xa0\x27\x64\xab\x3d\x0d\xd0\x44\x36\x5f\x01\x7b\x14\xcb\x7f\xc2\xb4\xb5\xf4\xe1\x48\x92\x38\x6d\xd8\x3d\x5a\x17\x97\x2d\xfe\x20\x71\x7a\x58\xd1\xdf\x7e\x12\x6d\x27\x38\xed\x9f\x8d\x10\x44\x1f\x33\x9f\x99\x50\x22\xbb\xbd\x9f\x60\x82\xec\xc8\x2f\x79\xf8\x8c\x89\x95\xc5\x5b\x44\x1a\xda\xe5\x5a\x50\xb6\x63\x04\x55\x4f\x46\x60\x64\x8f\x11\xc4\xb7\xa7\xe6\xb3\x17\xd9\x99\xbd\x27\x32\x63\x92\x43\x66\x2c\x7c\x36\xb3\xf6\x5c\xed\x78\x8c\xea\x23\xec\x4c\xa4\xe6\xc7\x48\x23\x19\x21\xa6\x70\xb9\xb2\x9c\x3e\xc8\x3f\x55\x23\x78\xc0\x97\x29\x98\xeb\x51\x3f\x5c\xc7\xf4\xd2\xed\x7a\xec\x83\x0e\x56\x85\x70\xb2\x76\xc9\xeb\x97\xe5\x29\x92\x8f\x11\x6d\xe3\x26\x87\xf2\xa4\xfd\x83\x1a\x3e\xd5\x75\x22\xbb\x76\xea\xf3\x0c\xb6\x29\x88\x33\xcf\x98\x89\x26\x2e\xe2\xa9\xee\xd6\xe8\xfd\x0c\xfc\x9b\x79\x8a\x5d\x03\x08\xab\x63\xbf\x71\x26\xb3\xa2\x1b\xbb\xd1\x21\x85\xf4\xc6\xfa\x78\xea\x8f\x9a\x07\xbd\xad\x06\x24\x8d\xd2\xd6\xba\xf4\xf5\xdf\xbe\x0f\x77\x36\x26\xce\x70\xa2\xfd\x14\x8d\xf7\x36\xef\x4a\x9a\xd3\xe2\x23\x25\xa5\xf5\x6b\xd7\xb8\xcc\xb1\x23\x67\x76\x97\x3d\x5b\xfe\x17\x6c\xae\x49\xb8\xcd\x33\xf6\x39\x9d\x59\xd9\x65\x9b\x73\xf4\xa8\x91\xc7\x3c\x27\xf7\x33\x32\x40\xcb\xdc\x7f\xe3\xa8\x8c\x79\x4f\x98\xf3\x70\x9e\xf7\x80\xdd\xc6\x62\x6b\xcd\xc1\xbc\xf5\x26\x7d\x60\x69\xad\xcf\x99\x3c\x6f\x4b\xcb\x56\xaf\xbb\x2d\x99\xbe\x6d\x9b\xb9\x9b\xff\xf9\xf4\xcc\xec\x33\xe4\x03\x2d\x17\x45\xe2\x5b\x1d\xff\x40\x2b\x8a\xf2\x42\x2b\x3a\xab\x7e\x5a\x2b\x2a\x7a\x41\x2b\xeb\xd3\x45\xbd\xb0\xe4\x9e\xbc\xa6\x7f\xae\x97\x07\xbb\x0f\xb7\xdc\x43\x4f\xf9\x13\xf6\x6b\x7e\xc5\x7e\xeb\x57\xd8\x1f\xe1\x1c\xfb\x1f\xcd\xe1\x2f\xa8\x48\x41\xb3\x30\xf8\x97\x55\xc4\x9e\xe7\xff\x43\x45\x2c\xc7\x0b\x15\xb1\xd2\xbe\xfb\x79\xf0\xee\x15\x43\xfa\x2f\x63\x3f\x2a\xbf\x60\x3f\x9a\x5d\x60\x3f\xc6\xfa\xdd\xec\xd7\x54\x5c\x19\xfa\xe3\x37\x81\x38\x5e\xf5\x17\xc7\x95\xfe\xe2\x7c\xb6\xbf\xbc\xcb\xfe\xef\x6e\x05\x2d\x2b\x69\x0f\x3f\x7f\xc3\xf2\xe7\xef\x7f\x8f\xbc\x96\x7c\x85\xd7\x86\xef\xbc\x61\x89\x0f\x89\xe4\xe5\xc7\xb9\x4c\xa1\xbe\xe0\x32\x19\x2e\x70\x99\xa2\x7d\x27\x97\x1c\x43\x0e\xb1\xc6\x5f\xd6\x6d\xf3\xfc\x26\xf0\xbf\xcc\x67\x6a\x17\x98\xcf\x22\xdf\xdd\x6d\x69\x24\x16\x13\xfa\x71\x25\xe7\x42\xaf\xf8\xac\x7a\x85\xcf\x56\xae\x29\x19\xc8\x64\x6a\x1c\x73\xcc\x91\x05\xea\x8c\xa0\xce\x54\x42\xb2\x8e\x50\x13\xb9\x36\x8c\x28\x92\x86\x67\x76\x69\x40\x2a\x83\xb5\x48\x61\xad\xad\xe7\x50\x63\x60\xd5\x1c\xa9\xa1\x45\xaa\x0c\x70\xfa\x2f\x00\x00\xff\xff\x02\xc3\x68\x3c\x7a\x16\x00\x00")

func compiledExtensionBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBin,
		"compiled/Extension.bin",
	)
}

func compiledExtensionBin() (*asset, error) {
	bytes, err := compiledExtensionBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x57\x0d\x52\xeb\x3c\x0c\xbc\xd2\x4a\xb2\x64\xf9\x38\xfe\xbd\xff\x11\xbe\x71\x9c\x02\x6d\xf8\xca\x4b\x1e\xaf\x0c\x61\x18\xe8\xc6\xd6\xcf\x6a\x2d\xb9\x06\x87\x21\x40\xd9\x80\x20\x46\x30\x02\x72\xd0\x68\x00\x44\x63\x05\xe1\xe2\x93\x80\x60\x32\xf6\x87\xcc\x61\x42\x4e\x86\xd6\x1a\x85\xcd\x4f\xd2\x38\x51\x89\x1c\xd4\x29\x2c\xb4\x85\x1d\x2d\x8e\xde\x33\x6f\x28\xe9\xbe\x36\x60\xa4\x91\x47\x5f\x68\xca\x3b\x4a\x23\x21\x32\x6d\x28\x23\x2e\xd4\xa0\x6d\x68\xaa\x0b\xd5\xba\xd0\x94\xab\x4a\x2b\x65\xa1\xbe\xaf\xad\x65\x58\x6b\x75\xd9\xe5\xb2\xdb\x6d\xca\xb1\x4b\x58\x91\x71\xd7\x85\x76\x87\xaa\xcb\xf2\x26\xdc\x35\x6a\x99\x7c\x39\x46\xd3\x22\xc1\x41\x3a\x33\x29\xba\x78\x5c\xb8\x6e\xdc\x96\x3e\xf7\xf8\x50\x9b\x7b\x02\x94\x1c\xce\x4e\xb3\x02\x0c\x50\x22\x85\xe2\xf6\x26\x11\x24\x61\xc8\x47\xab\x1d\x07\xab\x24\xd3\x7f\x70\x88\x41\x7c\xf2\x02\x87\x43\x34\x61\xb7\x0a\x67\xd0\x03\xb2\xd5\x9e\x06\x68\x22\x9b\xaf\x80\x3d\x8a\xe5\x3f\x61\xda\x5a\xfa\x70\x24\x49\x9c\x36\xec\x3d\x5a\x17\x97\x2d\xfe\x20\x71\x7a\x58\xd1\xdf\x7e\x12\x6d\x3b\x38\xed\x9f\x8d\x10\x44\xef\x33\x9f\x99\x50\x22\xbb\xfd\x3d\xc1\x04\xd9\x91\x5f\xf2\xf0\x15\x13\x2b\x8b\xb7\x88\x34\xb4\xcb\xb5\xa0\x6c\xc7\x08\xaa\x9e\x8c\xc0\xc8\xee\x23\x88\x6f\xa7\xe6\xab\x87\xec\xcc\xda\x13\x99\x31\xc9\x21\x33\x16\x3e\x9b\x59\x7b\xac\x76\x3c\x46\xf5\x19\x76\x26\x52\xf3\x63\xa4\x91\x8c\x10\x53\xb8\x5c\x59\x4e\x9f\xe4\x9f\xaa\x11\x3c\xe0\xdb\x14\xcc\xf5\xa8\x1f\xae\x63\x7a\xe9\x76\x3d\xf6\x41\x07\xab\x42\x38\x59\xbb\xe4\xf5\xdb\xf2\x14\xc9\xc7\x88\xb6\x71\x93\x43\x79\xd0\xfe\x41\x0d\x5f\xea\x3a\x91\x5d\xdb\xf5\x75\x06\xdb\x14\xc4\x99\x33\x66\xa2\x89\x8b\x78\xaa\xbb\x35\xfa\x38\x03\xff\x66\x9e\x62\xd7\x00\xc2\xea\xd8\x6f\x9c\xc9\xac\xe8\xc6\x6e\x74\x48\x21\xbd\xb1\x3e\x1e\xfa\xa3\xe6\x41\x6f\x6f\x03\x92\x46\x69\xeb\xbd\xf4\xf5\xdf\xbe\x0e\xef\x6c\x4c\x9c\xe1\x44\xfb\x2e\x1a\x1f\x6d\xbe\x2b\x69\x4e\x8b\xcf\x94\x94\xd6\xaf\x5d\xe3\x32\xc7\x8e\x9c\xd9\x5d\xf6\x6c\xf9\x5f\xb0\xb9\x26\xe1\x36\xcf\xd8\xe7\x74\x66\x65\x97\x6d\xce\xd1\xbd\x46\xee\xf3\x9c\xdc\xcf\xc8\x00\x2d\x73\xfd\x8d\xa3\x32\xe6\x3d\x61\xce\xc3\xb9\xdf\x03\x76\x1b\x8b\xad\x35\x07\xf3\xd6\x9b\xf4\x8e\xa5\xf5\x7e\xce\xe4\x79\x5b\x5a\xb6\x7a\xdd\x6d\xc9\xf4\x6d\xdb\xcc\xdd\xfc\xcf\xd3\x33\xb3\xcf\x90\x4f\xb4\x5c\x14\x89\x6f\x75\xfc\x03\xad\x28\xca\x13\xad\xe8\xac\xfa\x69\xad\xa8\xe8\x05\xad\xac\x4f\x17\xf5\xc2\x92\x7b\xf2\x9a\xfe\xb9\x5e\xee\xec\xde\xdd\x72\x0f\x3d\xe5\x4f\xd8\xaf\xf9\x19\xfb\xad\x5f\x61\x7f\x84\x73\xec\x7f\x36\x87\xbf\xa1\x22\x05\xcd\xc2\xe0\x5f\x56\x11\x7b\x9c\xff\x77\x15\xb1\x1c\x2f\x54\xc4\x4a\x7b\xf5\x79\xf0\xee\x15\x43\xfa\x2f\x63\x3f\x2a\x3f\x61\x3f\x9a\x5d\x60\x3f\xc6\xfa\x6a\xf6\x6b\x2a\xae\x0c\xfd\xf1\x9b\x40\x1c\xcf\xfa\x8b\xe3\x4a\x7f\x71\x3e\xdb\x5f\x3e\x64\xff\x77\xb7\x82\x96\x95\xb4\x87\x9f\xbf\x61\xf9\xe3\xf7\xbf\x7b\x5e\x4b\xbe\xc2\x6b\xc3\x2b\x6f\x58\xe2\x43\x22\x79\xf9\x71\x2e\x53\xa8\x4f\xb8\x4c\x86\x0b\x5c\xa6\x68\xaf\xe4\x92\x63\xc8\x21\xd6\xf8\xcb\xba\x6d\x9e\xdf\x04\xfe\x97\xf9\x4c\xed\x02\xf3\x59\xe4\xd5\xdd\x96\x46\x62\x31\xa1\x1f\x57\x72\x2e\xf4\x8c\xcf\xaa\x57\xf8\x6c\xe5\x9a\x92\x81\x4c\xa6\xc6\x31\xc7\x1c\x59\xa0\xce\x08\xea\x4c\x25\x24\xeb\x08\x35\x91\x6b\xc3\x88\x22\x69\x78\x66\x97\x06\xa4\x32\x58\x8b\x14\xd6\xda\x7a\x0e\x35\x06\x56\xcd\x91\x1a\x5a\xa4\xca\x00\xa7\xff\x02\x00\x00\xff\xff\x81\x38\x6a\x77\x3a\x16\x00\x00")

func compiledExtensionBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionBinRuntime,
		"compiled/Extension.bin-runtime",
	)
}

func compiledExtensionBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Extension.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x94\x41\x4b\xc3\x40\x10\x85\xff\xcb\x9c\xf7\x14\xb5\x48\x8e\xa2\x07\x0f\x82\x58\xc1\x43\x09\x32\x49\x26\xb2\x64\x33\xbb\xec\xce\xc6\x86\xd2\xff\x2e\x09\xd5\xa2\x04\x1b\x04\xd3\xdc\x72\x98\x37\xf3\xe5\xf1\xde\x6e\x76\x50\x58\x0e\x82\x2c\x90\x8a\x8f\xa4\x40\xb3\x8b\x12\x20\xdd\x64\x0a\x18\x1b\x82\x14\x18\x45\xb7\xf4\x2a\xdb\x1b\x63\x8b\xfa\x89\x2a\x50\x60\xa3\x1c\xe6\x76\x9f\x63\xa0\x40\x3a\xd7\x7f\xe5\x9d\x50\xb8\x86\x7d\xa6\xc0\x61\x87\xb9\x21\x48\x2b\x34\x81\x14\x04\x41\xa1\x87\x28\x98\x6b\xa3\xa5\x83\x14\x5a\x4d\xef\x47\x69\x15\xb9\x10\x6d\x19\xf6\xea\x17\xb6\xaf\x9b\x1c\x9b\xa3\x36\x6a\x96\x8b\x64\x38\xfb\x9d\x3c\xef\xb9\x9f\x75\x43\xa7\xc0\xfb\x0d\xab\xcb\x85\x81\xdf\xdf\x4e\xf2\xfb\xb0\x60\x39\xdc\x6b\xfd\xc6\xe4\x4f\xb1\x63\x59\x7a\x0a\xe1\x1f\xd9\x47\x82\xfc\xe8\x6d\x4b\xe5\x8b\xf5\xf5\x94\x44\x24\x57\xab\x59\xf1\xac\xa0\x59\x47\xe7\x4c\x77\x7e\xba\x3f\x35\x6d\xf8\x81\xc2\xfa\x05\xf5\xad\x44\xc1\x1f\x85\x19\xc5\xc7\x9a\x92\xbc\xb7\xf4\xec\x95\x1b\x89\xed\xdd\xd6\x69\x8f\x83\x74\x82\xb1\x73\xd3\xcd\xf5\x4e\x65\x1f\x01\x00\x00\xff\xff\x46\xf2\x90\x9d\xb6\x06\x00\x00")

func compiledExtensionnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeAbi,
		"compiled/ExtensionNative.abi",
	)
}

func compiledExtensionnativeAbi() (*asset, error) {
	bytes, err := compiledExtensionnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBin,
		"compiled/ExtensionNative.bin",
	)
}

func compiledExtensionnativeBin() (*asset, error) {
	bytes, err := compiledExtensionnativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledExtensionnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledExtensionnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledExtensionnativeBinRuntime,
		"compiled/ExtensionNative.bin-runtime",
	)
}

func compiledExtensionnativeBinRuntime() (*asset, error) {
	bytes, err := compiledExtensionnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ExtensionNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledImeternativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xdc\x94\x3f\x6b\xc3\x30\x10\xc5\xbf\xcb\xcd\x9a\x0a\xed\xe0\xb1\x7b\xa7\x8e\x21\x98\x73\x7c\x31\x02\xf9\x24\xa4\x77\x29\x26\xe4\xbb\x17\x4a\x8d\xfb\x27\x25\x1e\xdc\xc4\x64\x14\xdc\x1d\xef\xf7\x78\x7a\x9b\x23\xed\xa2\x16\xb0\x82\x2a\x64\x13\x47\x5e\x93\xa1\x50\xb5\x39\x92\x72\x2f\x54\x11\xb7\x6d\x26\x47\x18\xd2\xf8\x92\x52\xe8\xb4\x75\xe3\x80\x32\xfc\x41\xea\x1e\xb9\xee\x04\xe4\x28\x1a\x7e\x1e\x99\x0e\x98\x57\x3c\x3c\x3e\x7d\x1c\x48\x3c\x70\x13\x84\xaa\x3d\x87\x22\x8e\x0a\x18\xf2\x62\xe0\xc6\x07\x8f\x81\x2a\x3a\x78\x79\x9b\x76\xf7\xa6\x3b\xf8\xa8\x74\x72\x8b\x2a\xe7\x02\xc9\x97\x84\x7f\xdd\xff\x1f\xe1\x67\x2d\x45\x04\x87\x57\x4b\x29\x0c\x37\xb0\xf6\x73\x7b\xb6\xb7\x6e\x1a\xe8\xa3\x29\xce\x8b\xfb\x45\xd9\xd5\xc5\x9a\x4b\x78\x4d\x8c\x61\x26\x9b\x46\x1d\x87\x56\x42\x58\x73\xdb\x7e\x03\x5c\x9a\x63\x46\x96\xba\x1b\x87\x69\x81\x86\xe9\xd6\x51\x31\x7f\xff\xd4\x67\xcb\x2a\xed\x3d\xff\xd4\xf5\x04\xf9\xde\xbd\xbe\x6a\x29\x6e\xdf\x03\x00\x00\xff\xff\xeb\xb1\xae\x26\x0d\x08\x00\x00")

func compiledImeternativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledImeternativeAbi,
		"compiled/IMeterNative.abi",
	)
}

func compiledImeternativeAbi() (*asset, error) {
	bytes, err := compiledImeternativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/IMeterNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledImeternativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledImeternativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledImeternativeBin,
		"compiled/IMeterNative.bin",
	)
}

func compiledImeternativeBin() (*asset, error) {
	bytes, err := compiledImeternativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/IMeterNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledImeternativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledImeternativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledImeternativeBinRuntime,
		"compiled/IMeterNative.bin-runtime",
	)
}

func compiledImeternativeBinRuntime() (*asset, error) {
	bytes, err := compiledImeternativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/IMeterNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcd\x31\x0a\xc2\x40\x10\x85\xe1\xbb\xbc\x7a\x4e\xb0\x77\xf0\x04\x21\xc5\x24\x4c\x60\x20\xce\x2e\xbb\x6f\x94\x45\xbc\xbb\x58\xd9\x58\x88\xf5\x0f\xff\xb7\x3c\xb0\xd7\x18\xd4\x20\x0a\x7b\x9a\xc0\xa3\x25\x07\xca\xb2\x0a\x42\xaf\x86\x02\x8f\xb0\x0e\x41\x4d\x7e\x5a\xd3\xa9\xdb\x69\x28\x87\x9e\xc3\x04\x83\x4a\xbb\x24\x75\xf3\xd3\x39\x51\xd0\xb2\x1b\x04\x9c\xed\x3d\x39\x32\x76\x7a\x0d\x3c\xe5\x27\xb4\x26\xff\x41\x6f\x6e\xf7\x6f\xe8\xfa\x0a\x00\x00\xff\xff\x0a\x34\xa0\xdd\xeb\x00\x00\x00")

func compiledMeasureAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureAbi,
		"compiled/Measure.abi",
	)
}

func compiledMeasureAbi() (*asset, error) {
	bytes, err := compiledMeasureAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x6f\x6e\xec\x20\x0c\xc4\xaf\x34\xfe\x37\x36\xc7\x81\x40\xee\x7f\x84\x27\x36\xd9\x97\x76\xbf\x54\x6a\x6d\x29\x01\x7b\x8c\xe6\x67\xa2\x40\x38\x42\xcd\x0b\x12\x14\x40\x10\x49\x00\x85\x73\xc6\x08\x50\x20\xba\x75\x02\x28\x76\xc7\xda\xfe\x9e\x06\x3c\xf3\x04\xdc\x28\xfb\xd6\xae\x79\x8b\x3c\x20\xf8\x65\x34\xc0\x69\xe7\x1d\xc2\x02\xcd\xfb\x1c\x99\xda\xc4\x09\x5f\x91\xbb\x56\x79\xd8\x1c\x83\xbb\x46\x8d\x8c\xf1\x78\xbf\x99\x10\xed\x83\xe8\x95\xc9\x60\x0c\xe0\xd1\x71\x7e\xea\xd2\x89\xac\xb7\x6e\xff\x0d\xf9\xdf\xd5\x4f\x21\x7c\x3c\xbf\xb6\x24\x25\x5f\x99\xfe\xb2\x1f\x68\xc9\xb5\x75\xc8\xf6\x7c\xbf\x8f\x32\x58\xbd\x2a\x95\x05\x1b\x12\x17\xdb\x1c\xdf\xd9\xa2\x9f\xf2\xee\xad\x15\x69\xf3\xea\xda\xba\x4e\xb7\xea\x4a\x02\x5d\x18\xd4\xec\xd9\x53\x0d\x51\x0a\x5d\xb1\xce\x38\x72\x0d\xf5\xb9\x56\x19\x56\x1d\xa4\x8b\xae\x15\xda\x67\x55\x35\x75\x7a\xf9\xea\x0d\xf3\x24\xec\x48\x13\x1a\xd3\x47\xf5\x8d\xd0\xfe\x05\x00\x00\xff\xff\x4b\xf9\x39\x76\x80\x02\x00\x00")

func compiledMeasureBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureBin,
		"compiled/Measure.bin",
	)
}

func compiledMeasureBin() (*asset, error) {
	bytes, err := compiledMeasureBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeasureBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x50\xd1\x71\xc5\x20\x0c\x5b\x49\xc6\xb6\xec\x8c\x03\xc1\xd9\x7f\x84\x1e\x21\xaf\xaf\xed\x4f\xef\x5a\xf9\x23\x41\xd6\x81\x24\x22\x41\x18\xbc\x11\x30\xa5\xac\xd3\xe1\x41\x00\xea\x71\x42\xf0\x47\x1c\x80\x51\xaf\x07\xc2\x04\xd5\xfa\x1c\x11\xed\x10\x23\xac\x3c\x16\x97\x71\xea\x1c\x83\x8b\x63\xf3\xf0\xb1\xde\x4e\x5c\xd3\x87\x5a\x42\x9c\xf0\xc7\xd1\x66\x1d\xbc\x27\xe8\xf4\x01\xbc\x75\x9c\x3f\x75\x61\x44\xe4\x4b\xb7\xbe\x8a\xf8\x74\xf5\x1b\x84\x6f\xcf\x77\x4b\x92\xf2\x35\xd3\x7f\xfa\x41\x4b\xd9\xad\x43\x96\xe7\xe7\x7e\xa4\x42\xf3\x66\x32\x12\x3a\xc4\x77\xb6\x39\xbe\x67\xf3\x7e\xc9\x6b\x57\xe5\xa1\x73\x6f\xb5\xf6\xdf\xa3\xda\x43\xa0\x0b\x9d\x2d\x7a\xf4\x68\x0a\xcf\x86\x56\x5e\x97\x9f\x51\xa3\xd9\xac\x4a\x45\xe5\x49\x9a\xb4\x2a\x6f\x7d\x66\xe6\xd1\x8c\x96\x56\xfd\xc0\xbc\x08\x3d\x43\x85\xca\xb0\x91\x7d\x45\x38\x3e\x02\x00\x00\xff\xff\xa7\xa8\xe1\xfd\x40\x02\x00\x00")

func compiledMeasureBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeasureBinRuntime,
		"compiled/Measure.bin-runtime",
	)
}

func compiledMeasureBinRuntime() (*asset, error) {
	bytes, err := compiledMeasureBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Measure.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeterAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x8b\xdb\x30\x10\xfd\x2f\x73\xd6\xa9\xd0\x52\x7c\x6b\x0f\xbd\x95\x1e\xda\xdb\x12\xca\xd8\x1e\x17\x81\x34\x23\xa4\x51\x52\xb3\xec\x7f\x2f\x71\x1c\xdb\x6c\x6d\xc7\x4d\xb3\x24\x27\x1b\xe6\xf3\xbd\x99\x27\xe9\xe9\x19\x2a\xe1\xa4\xc8\x0a\x85\xc6\x4c\x06\x2c\x87\xac\x09\x8a\xa7\x9d\x01\x46\x4f\x50\x9c\x3e\x06\x24\x6b\x6f\x7a\x3e\x5b\xc0\x80\xb6\xe1\xf8\x97\x34\x5a\xfe\x05\x2f\x3b\x03\x01\x5b\x2c\x1d\x41\xd1\xa0\x4b\x64\x20\x29\x2a\x7d\xcd\x8a\xa5\x75\x56\x5b\x28\x20\xe4\x48\x63\x68\x93\xb9\x52\x2b\x0c\x2f\x66\xda\x4e\x1f\x3d\xf4\x33\x14\xfd\x99\x02\x71\x4d\x71\xcc\x80\x75\x1d\x29\xa5\x2e\xc1\xd9\x69\x8f\x2e\x4f\x8a\x64\xcb\xfa\xee\xfd\x87\xae\xc1\xde\x05\x43\x88\xb2\x5f\x40\x96\x72\x55\x1d\x53\x0e\x09\x4a\x11\xb7\x11\x1e\x0b\x9f\x9d\x2e\x81\x5c\xe4\x5c\x45\xd1\x7d\xcf\x21\xb8\xf6\x12\xf5\x53\x68\x97\x9b\xdb\x5b\x3a\xfc\x07\xf7\x4d\x14\xbf\x4e\xbc\xca\xba\x1d\xbd\x64\xd6\xd5\xc9\x68\x44\x4e\x0d\xc5\x2f\xa7\x62\x0f\x38\x9e\x9a\x2a\xeb\xd1\xa5\x2d\xb3\xf9\x78\x4b\x55\xbc\xea\x68\xa4\x55\x0e\x3c\x2b\x89\xb1\xe7\x12\x1d\x72\x45\xdf\x9a\xf9\xa6\x7b\xf3\x9b\xee\xd5\x22\x9f\xa9\xf5\xa5\xb8\x47\x3a\x64\x6e\xb8\xc6\x77\x5d\xe1\x3b\x4b\xd9\x3f\xf6\x09\xfb\x39\x47\xa6\xfa\x0e\x27\xec\x3f\xeb\xd8\x6c\xb9\xff\x26\x97\x9b\x73\x72\xe8\xf5\x3c\x83\x2d\x92\x47\xcb\x47\x31\xdd\x1e\xe4\x94\xeb\x21\xd1\x09\xef\x8c\x4a\x5f\x8f\xb1\xa3\x28\xe6\x4a\x25\x76\xd9\x90\x85\x5b\x2f\x39\xcd\xad\xb2\xe5\x9a\x7e\x53\x7d\x4e\x7f\x79\xb3\x17\x02\x96\x16\x7d\x70\xef\x4b\x6f\x7f\x5c\xfc\x18\xb5\xdf\x3b\xd1\x9e\x58\xaf\x86\xb4\xb2\x16\x0b\x11\xab\xaf\xa4\xeb\x81\x7d\xea\x5e\x4d\xe8\xfe\x02\xb6\xfb\x13\x00\x00\xff\xff\x55\xc9\x1e\xe6\x4d\x0a\x00\x00")

func compiledMeterAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeterAbi,
		"compiled/Meter.abi",
	)
}

func compiledMeterAbi() (*asset, error) {
	bytes, err := compiledMeterAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Meter.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeterBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x76\x22\x31\x0e\xbd\x92\x16\x6b\x3b\x8e\xd7\xfb\x1f\x61\x9e\xcb\xc5\x16\xd2\x84\x22\x4d\x32\x33\x4d\x3d\x08\x11\x2e\x5b\xfe\xfe\xfa\x92\x4a\xc1\x41\x21\x81\x90\xe6\xd4\x54\x2c\xa9\x18\xa5\xae\x68\x49\xc3\x54\x45\x01\x50\x01\x40\x11\x10\x00\xb2\xa3\x24\x47\xe3\xf1\xe4\x0b\x08\x03\x35\xc0\xf9\xf9\x7b\x50\x81\xd0\x02\x44\x04\x14\x11\xa0\xfa\x5c\x1f\x64\x4c\x4f\x38\xe6\xe7\x60\x80\x2b\xef\x01\x12\x2b\x6e\xa3\xf2\x10\xdb\xc6\x89\xd5\xcd\xe7\x97\x5e\x01\x90\x94\x2f\x1e\x39\x28\x83\x8e\xd6\x3a\x30\xa6\xb9\x4e\x49\x62\x9b\x35\xa4\x67\x2b\xcb\x8a\x69\xb7\xa2\xa3\x42\x6b\x6d\x59\x73\x2c\x2b\x71\x71\xa3\x93\xb5\xed\x63\x19\xb9\x76\x51\xdb\xac\x24\xfb\x58\x83\x0c\x4e\x8c\xcb\xea\x79\x59\x43\x9a\x47\x49\xbb\xb5\xe3\xb2\xe6\x00\x89\x5a\xca\x66\x65\xdb\xad\xa5\xb0\x98\xf3\x6e\x9d\xc7\x3b\xad\xcd\x03\x59\xea\xf2\x21\x49\xd9\xad\x4d\xa9\x37\xee\xcb\xea\x2a\x26\x65\xa2\xe8\x30\x9a\x14\x4e\x0e\x28\x73\xd7\x15\x16\xba\xcb\x2e\x1b\xe2\x35\xe6\x3d\xa3\x89\xce\x7b\x12\x08\xfa\x76\x32\x04\x80\x4e\x8e\xc0\x4e\x42\xce\x8e\x8e\x32\xdf\xb4\x7e\x0b\x14\x70\x10\x8c\x7d\x6c\x80\x83\xb3\xf3\x9c\x5f\xca\x1c\x8f\x6b\x55\x84\x0d\x13\x27\xd8\xee\xf7\x04\xfb\x1c\x8e\xf3\xae\xe5\x45\xef\x73\x7d\x81\x75\xc5\xf6\x5e\xbf\x2b\xe0\x76\x82\x6b\x2e\xd6\x7d\x2e\x9e\x6b\x4f\x7e\xcf\x15\x09\x80\x4f\x1c\x07\x9e\x9c\xbd\xf5\x73\xce\x1c\xb4\xe6\x3e\xed\x31\x10\x38\x60\xf0\x15\x3e\x73\xe4\x47\x7c\xd0\x27\x6f\x93\x03\x2b\xf0\xf2\x68\xe2\xc3\x72\x24\x22\x2e\x18\x05\xc5\x36\x03\xcb\x47\xdb\xee\x1d\x82\x70\xbe\x39\x0b\x42\x59\xd7\x87\x3d\x3d\xdc\x49\x91\xfb\x9d\x94\x3e\x83\x8c\xca\xed\xec\x47\x66\xed\xf7\xf8\x10\xbf\x09\x9f\xb7\xe1\xab\x83\xbf\x8d\x2f\xe9\x3d\xbe\xa4\x13\x5f\x77\xbb\x9d\x5d\x61\x7a\xb8\x3e\x8f\xac\x10\x7a\xbf\x42\x2d\x7f\x1f\xeb\x33\x2e\x1e\xf0\x32\x33\xa8\xb7\x7b\x6f\x87\x2a\x42\x04\xbe\x4d\x59\xf8\xac\x06\x7f\x56\x16\xc6\xf2\x94\xb2\xb0\xf2\x1b\x95\x85\xed\x1e\x1f\x2e\xf5\x87\x95\x25\x6a\xff\x36\xf3\xb9\xd3\xdd\x4e\x52\xc2\xff\x31\x0d\x88\x2e\xdf\x46\x22\xa9\xdd\x23\x61\xf3\xb3\xd4\xf6\x72\x24\xa5\xf8\x04\xdf\x6e\xff\x7d\xf8\x9e\xb1\xac\x21\x47\x77\xab\xa0\x9b\x75\x45\xf9\xdc\xd1\xaa\x04\xa7\x3a\xc0\xd5\x19\xd8\xb8\xd4\xb5\xaf\x55\x82\x73\xae\x53\xd4\x2f\x2f\xa7\x6d\xe1\xcb\x87\xaa\xda\x23\x63\xaf\x10\x80\xcb\xf7\xb9\x2a\xc1\xb6\xf6\x21\xe4\xff\xd6\xca\x8e\xab\x2a\x77\x3a\x32\xe3\x41\x94\x86\x57\x29\x1d\xbb\xf4\xd2\xab\x35\x29\x0d\xd3\x30\x4c\x64\x0d\xbb\xa7\xc1\xad\xcd\x1a\xbc\xc2\xb0\x42\x14\xd8\xa5\x10\x40\xae\x5e\xad\x72\x09\x12\x4f\xcf\x32\x29\xcf\x8c\xb0\x31\x71\x32\x72\xe3\xe3\x7e\xc2\xa7\xbe\x27\x40\x52\x9c\xbb\x9f\xd9\x15\xbc\x0b\x77\x65\x30\xed\xac\xd8\x76\x1f\xf1\xba\xff\xf8\x4e\x2f\x03\x3b\x0a\x90\xe6\x9e\xe8\x8c\x81\xf3\xd4\x82\x8d\x4d\xe6\xc0\x05\x65\x57\x10\x9d\x8d\xc3\xb5\x82\x48\x1e\x78\xf9\xb5\x9a\x18\xb7\x3d\x02\xfa\xfa\xb6\x8f\xbb\xca\x62\xd3\x3e\x19\xb3\x67\x5a\x6d\x37\xf9\xeb\xa2\x41\xd7\x59\xfa\x5a\x17\x3e\x8f\x38\x3f\x84\xe9\xdf\x8c\xb8\xdf\x89\x75\x49\x13\xbf\x79\x29\x82\x75\x9f\x18\x4e\x74\x6d\x80\x57\xb6\xc8\x2f\x93\xe2\xc2\x89\xcf\x6a\xaa\x59\xd9\x5c\x7c\x71\xb0\xa1\x64\xa2\xa1\xd5\x92\x86\x76\xce\x04\xf3\xaf\xb1\x89\xce\x57\x28\x6b\xa8\x68\xb7\x44\xa0\xa8\x55\xab\x0e\x33\x45\xed\xca\x2a\x27\x1d\x7d\xa0\xea\x1b\x2b\xfe\xcd\x53\xde\x76\x4d\x4e\x92\x80\x57\x2d\x78\x52\xda\x59\x55\x5b\xf5\x34\x2f\x45\x68\xb8\xf7\x5e\xbb\x6a\xf1\xa9\x72\xbc\xe8\x16\xd2\x6d\xe4\xfc\x8a\x92\x09\x62\x0b\xd8\x2a\xee\xed\x8c\xe9\x1d\x5a\xe6\x07\xf3\xd0\x8b\xa7\xb5\x73\xf5\x09\xdd\x8c\x34\x1e\xe8\x66\xcc\xfe\xe0\xb0\x6e\x86\xc5\x0b\xba\xb9\xfe\xd3\x2f\xea\x24\xbe\xad\x93\x24\xc9\x8b\x35\x12\xfc\xa1\x4e\x9a\xfe\xb7\xc2\xfc\x07\xf6\x7e\xc8\xb9\xc7\x62\xcf\x0f\xf1\x17\xd3\xf6\x0c\xb1\x24\x16\x93\x83\x2b\xfd\x4e\x04\x45\x08\xf4\x70\xfd\xa7\x22\x28\x0f\x78\x10\x41\x05\xd2\x0b\x11\x54\x30\x1f\x8b\xa0\x63\xbc\x92\xb2\x67\xe7\x52\xec\xe7\xb2\x33\xc1\x57\xd9\xd9\x58\x45\xab\x2a\x81\x0e\x23\x02\x6d\x8a\xc6\xab\x13\x22\x30\x52\x31\x9c\xf7\xcc\x6f\x9a\x9e\xc9\xce\x5b\x5f\x4a\x47\x72\xd1\xcf\xc7\x4d\xad\xd5\xda\x88\xdf\xaf\xa1\xab\xc8\x03\x26\x57\x8d\x17\x98\x5c\x6d\x7c\xab\x86\x5e\x75\xc6\xdb\xd0\xff\xb2\xc2\xf9\xa5\x0a\xfa\xb3\x5c\xe3\x88\xb8\x61\x3a\x6c\x3d\x25\xfd\x71\xa6\x0e\x4c\x9a\x64\x88\xa7\x73\x95\xc4\x6f\xd2\xf8\x1f\xc0\xfd\xa6\xd3\x3e\x3f\xcd\x7c\x22\x4e\x5a\x8f\x07\x71\xd2\x46\x7b\x21\x4e\x3a\xf2\xb1\x38\xd9\x15\xbc\xc7\x4f\xf6\x57\xed\x1b\xfd\x15\x6d\x1d\xd6\xb9\xb7\x02\x78\xae\xbf\xfa\x0d\x9e\x5b\x82\x82\x22\xc3\xf9\xff\x97\xe7\xf0\x35\xcf\x87\xb4\x07\x3c\x1f\x86\x8f\x79\x3e\x59\x7c\xc8\xe3\x83\xcf\xdc\x5a\x1b\x24\x94\x1b\x96\x4e\xd5\xa3\x68\x54\x2a\xa0\x3e\x2a\x9b\xb7\x9c\x43\xa8\x64\x1b\xa8\x5c\x53\x46\x54\xf2\x21\x92\x53\x1b\x42\x5c\xb8\x8f\xf3\xd9\x3e\xf1\xcc\xed\x54\x25\x00\x64\x54\x51\xb2\x6c\xd9\x88\x41\x9c\x60\x08\x23\xd6\x0c\xad\x8e\xa4\xa0\xb5\x37\x04\x8a\x9e\x3d\xb8\x94\x8a\x51\x08\x4d\x4d\xad\x64\x2d\x8d\xdb\xe8\x8d\xd8\x1b\x56\x4e\x91\xd3\x88\x00\xa0\xf8\x4f\x00\x00\x00\xff\xff\x50\x8b\x30\x8f\xd6\x20\x00\x00")

func compiledMeterBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeterBin,
		"compiled/Meter.bin",
	)
}

func compiledMeterBin() (*asset, error) {
	bytes, err := compiledMeterBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Meter.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeterBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x09\x76\xdb\x30\x0e\xbd\x12\x16\x62\x3b\x0e\xd7\xfb\x1f\x61\x1e\x45\x79\x8b\x53\xc7\x72\xea\x64\x66\x2a\xbd\xb8\x2e\x4c\x91\xe0\xe7\xc7\x07\x20\x05\x07\x85\x04\x42\x0a\x90\x58\x11\x14\x01\xf2\x10\x53\x00\x60\xb1\x0a\x08\x2f\x5e\x01\x90\x94\xc7\x7e\xa1\x3a\x28\x83\x8e\xd6\x3a\x30\xa6\xb9\x4e\x49\x62\x9b\x35\xa4\x67\x2b\xcb\x8a\x69\xb7\xa2\xa3\x42\x6b\x6d\x59\x73\x2c\x2b\x71\x71\xa3\x93\xb5\xed\x63\x19\xb9\x76\x51\xdb\xac\x24\xfb\x58\x83\x0c\x4e\x8c\xcb\xea\x79\x59\x43\x9a\x47\x49\xbb\xb5\xe3\xb2\xe6\x00\x89\x5a\xca\x66\x65\xdb\xad\xa5\xb0\x98\xf3\x6e\x6d\xba\xac\xcd\x03\x59\xea\xf2\x21\x49\xd9\xad\x4d\xa9\x37\xee\xcb\xea\x2a\x26\x65\xa2\xe8\x30\x9a\x14\x4e\x0e\x28\x73\xd7\x15\x16\xba\xcb\x2e\x1b\xe2\x35\xe6\x33\xa3\x89\xce\x67\x12\x08\xfa\x76\x32\x04\x80\x4e\x8e\xc0\x4e\x42\xce\x8e\x8e\x32\xff\x68\xfd\x16\x28\xe0\x20\x18\xfb\xd8\x00\x07\x67\xe7\x39\xbf\x94\x39\x1e\xd7\xaa\x08\x1b\x26\x4e\xb0\x3d\xef\x09\xf6\x39\x1c\xe7\x53\xcb\x8b\xde\xe7\xfa\x02\xeb\x8e\xed\x6f\xfd\xae\x80\xdb\x09\xae\xb9\x58\xf7\xb9\x78\xae\xad\xd3\x47\xde\xd6\xe7\x6d\x25\x80\x0c\x8c\x81\x7a\xeb\xe7\x9c\x39\x68\xcd\x7d\xda\x63\x20\x70\xc0\xe0\x2b\x7c\xe6\xc8\x8f\xf8\xa0\x8f\xc9\x4f\x07\x56\xe0\xe5\xd1\xc4\x87\xc5\xce\xfc\xfa\xea\x42\xbd\x60\x14\x14\xdb\x0c\x2c\x1f\x6d\xbb\x77\x08\xc2\xf9\xe6\x2c\x08\x65\xdd\x1f\xf6\xf4\x70\x27\x45\xee\x77\x52\xfa\x0c\x32\x2a\xb7\xb3\x1f\x99\xb5\xdf\xe3\x43\xfc\x26\x7c\xde\x86\xaf\x0e\xfe\x36\xbe\xa4\xf7\xf8\x92\x4e\x7c\xdd\xed\x76\x76\x85\xe9\xe1\xfa\x3c\xb2\x42\xe8\xfd\x0a\xb5\xfc\x7d\xac\xcf\xb8\x78\xc0\xcb\xcc\xa0\xde\xee\xbd\x1d\xaa\x08\x11\xf8\x36\x65\xe1\xb3\x1a\xfc\x59\x59\x18\xcb\x53\xca\xc2\xca\x6f\x54\x16\xb6\x7b\x7c\xb8\xd4\x1f\x56\x96\xa8\xfd\xdb\xcc\xe7\x4e\x77\x3b\x49\x09\xff\xc7\x34\x20\xba\x7c\x1b\x89\xa4\x76\x8f\x84\xcd\xcf\x52\xdb\xcb\x91\x94\xe2\x13\x7c\xbb\xfd\xf7\xe1\x7b\xc6\xb2\x86\x1c\xdd\xad\x82\x6e\xd6\x15\xe5\x73\x47\xab\x12\x9c\xea\x00\x57\x67\x60\x23\xcd\xc2\x27\xa9\x18\xbd\x56\x09\xce\xb9\x4e\x51\xbf\xbc\x9c\xb6\x85\x2f\xf3\x91\xfd\x1f\x19\x7b\x85\x00\x5c\xbe\xcf\x55\x09\xb6\xb5\x0f\x21\xff\xb7\x56\xf6\x79\x6a\x22\xe0\x74\x64\xc6\x83\x28\x0d\xaf\x52\x3a\x76\xe9\xa5\x57\x6b\x52\x1a\xa6\x61\x98\xc8\x1a\x76\x4f\x83\x5b\x9b\x35\x78\x85\x61\x85\x28\xb0\x4b\x21\x80\x5c\xbd\x5a\xe5\x12\x24\x9e\x9e\x65\x52\x9e\x19\x61\x63\xe2\x64\xe4\xc6\xc7\xfd\x84\x75\xdf\x73\x80\xa4\x80\x93\x7e\xcf\xae\xe0\x5d\xb8\x2b\x83\x69\x67\xc5\xb6\xfb\x88\xd7\xfd\xc7\x77\x7a\x19\xd8\x51\x80\x34\xf7\x44\x67\x0c\x9c\xa7\x16\x6c\x6c\x32\x07\x2e\x28\xbb\x82\xe8\x6c\x1c\xae\x15\x44\xf2\xc0\xcb\xaf\xd5\xc4\xb8\xed\x11\xd0\xd7\xb7\x7d\xdc\x55\x16\x9b\xf6\xc9\x98\x3d\xd3\x6a\xbb\xc9\x5f\x17\x0d\xba\xce\xd2\xd7\xba\xf0\x79\xc4\xf9\x21\x4c\xff\x66\xc4\xfd\x4e\xac\x4b\x9a\xf8\xcd\x5b\x11\xac\xfb\xc4\x70\xa2\x6b\x03\xbc\xb2\x45\x7e\x99\x14\x17\x4e\x7c\x56\x53\xcd\xca\xe6\xe2\x8b\x83\x0d\x25\x13\x0d\xad\x96\x34\xb4\x73\x26\x98\xff\x1a\x9b\xe8\xbc\x42\x59\x43\x45\xbb\x25\x02\x45\xad\x5a\x75\x98\x29\x6a\x57\x56\x39\xe9\xe8\x03\x55\xdf\x58\xf1\x6f\x9e\xf2\xb6\x6b\x72\x92\x04\xbc\x6a\xc1\x93\xd2\xce\xaa\xda\xaa\xa7\x79\x2b\x42\xc3\xbd\xf7\xda\x55\x8b\x4f\x95\xe3\x45\xb7\x90\x6e\x23\xe7\x57\x94\x4c\x10\x5b\xc0\x56\x71\x6f\x67\x4c\xef\xd0\x32\x3f\x98\x87\x5e\x3c\xad\x9d\xab\x4f\xe8\x66\xa4\xf1\x40\x37\x63\xf6\x07\x87\x75\x33\x2c\x5e\xd0\xcd\xf5\x3f\xfd\xa2\x4e\xe2\xdb\x3a\x49\x92\xbc\x58\x23\xc1\x1f\xea\xa4\xe9\x7f\x2b\xcc\x7f\x60\xef\x87\x9c\x7b\x2c\xf6\xfc\x10\x7f\x31\xf9\x56\x57\x27\x16\x93\x83\x2b\xfd\x4e\x04\x45\x08\xf4\x70\xfd\xa7\x22\x28\x0f\x78\x10\x41\x05\xd2\x0b\x11\x54\x30\x1f\x8b\xa0\x63\xbc\x92\xb2\x67\xe7\x52\xec\xe7\xb2\x33\xc1\x57\xd9\xd9\x58\x45\xab\x2a\x81\x0e\x23\x02\x6d\x8a\xc6\xab\x13\x22\x30\x52\x31\x9c\xcf\xcc\x6f\x9a\x9e\xc9\xce\x5b\x5f\x4a\x47\x72\xd1\xcf\xc7\x4d\xad\xd5\xda\x88\xdf\xaf\xa1\xab\xc8\x03\x26\x57\x8d\x17\x98\x5c\x6d\x7c\xab\x86\x5e\x75\xc6\xdb\xd0\xff\xb2\xc2\xf9\xa5\x0a\xfa\xb3\x5c\xe3\x88\xb8\x61\x3a\x6c\xbd\x25\xfd\x71\xa6\x0e\x4c\x9a\x64\x88\xa7\x73\x95\xc4\x6f\xd2\xf8\x1f\xc0\xfd\xa6\xd3\x3e\xbf\xcd\x7c\x22\x4e\x5a\x8f\x07\x71\xd2\x46\x7b\x21\x4e\x3a\xf2\xb1\x38\xd9\x15\xbc\xc7\x4f\xf6\x57\xed\x1b\xfd\x15\x6d\x1d\xd6\xb9\xb7\x02\x78\xae\xbf\xfa\x0d\x9e\x5b\x82\x82\x22\xc3\xf9\xff\x97\xe7\xf0\x35\xcf\x87\xb4\x07\x3c\x1f\x86\x8f\x79\x3e\x59\x7c\xc8\xe3\x83\xef\xdc\x5a\x1b\x24\x94\x1b\x96\x4e\xd5\xa3\x68\x54\x2a\xa0\x3e\x2a\x9b\xb7\x9c\x43\xa8\x64\x1b\xa8\x5c\x53\x46\x54\xf2\x21\x92\x53\x1b\x42\x5c\xb8\x8f\xf3\xd9\x3e\xf1\xce\xed\x54\x25\x00\x64\x54\x51\xb2\x6c\xd9\x88\x41\x9c\x60\x08\x23\xd6\x0c\xad\x8e\xa4\xa0\xb5\x37\x04\x8a\x9e\x3d\xb8\x94\x8a\x51\x08\x4d\x4d\xad\x64\x2d\x8d\xdb\xe8\x8d\xd8\x1b\x56\x4e\x91\xd3\x88\x00\xa0\xf8\x4f\x00\x00\x00\xff\xff\x68\xaa\x84\xaa\x18\x20\x00\x00")

func compiledMeterBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeterBinRuntime,
		"compiled/Meter.bin-runtime",
	)
}

func compiledMeterBinRuntime() (*asset, error) {
	bytes, err := compiledMeterBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Meter.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergovAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x56\x4d\x8b\xdb\x30\x10\xfd\x2f\x73\xd6\xa9\xd0\x52\x7c\x6b\x0f\xbd\x95\x1e\xda\xdb\x12\xca\xd8\x1e\x17\x81\x34\x23\xa4\x51\x52\xb3\xec\x7f\x2f\x71\x1c\xdb\x6c\x6d\xc7\x4d\xb3\x24\x27\x1b\xe6\xf3\xbd\x99\x27\xe9\xe9\x19\x2a\xe1\xa4\xc8\x0a\x85\xc6\x4c\x06\x2c\x87\xac\x09\x8a\xa7\x9d\x01\x46\x4f\x50\x9c\x3e\x06\x24\x6b\x6f\x7a\x3e\x5b\xc0\x80\xb6\xe1\xf8\x97\x34\x5a\xfe\x05\x2f\x3b\x03\x01\x5b\x2c\x1d\x41\xd1\xa0\x4b\x64\x20\x29\x2a\x7d\xcd\x8a\xa5\x75\x56\x5b\x28\x20\xe4\x48\x63\x68\x93\xb9\x52\x2b\x0c\x2f\x66\xda\x4e\x1f\x3d\xf4\x33\x14\xfd\x99\x02\x71\x4d\x71\xcc\x80\x75\x1d\x29\xa5\x2e\xc1\xd9\x69\x8f\x2e\x4f\x8a\x64\xcb\xfa\xee\xfd\x87\xae\xc1\xde\x05\x43\x88\xb2\x5f\x40\x96\x72\x55\x1d\x53\x0e\x09\x4a\x11\xb7\x11\x1e\x0b\x9f\x9d\x2e\x81\x5c\xe4\x5c\x45\xd1\x7d\xcf\x21\xb8\xf6\x12\xf5\x53\x68\x97\x9b\xdb\x5b\x3a\xfc\x07\xf7\x4d\x14\xbf\x4e\xbc\xca\xba\x1d\xbd\x64\xd6\xd5\xc9\x68\x44\x4e\x0d\xc5\x2f\xa7\x62\x0f\x38\x9e\x9a\x2a\xeb\xd1\xa5\x2d\xb3\xf9\x78\x4b\x55\xbc\xea\x68\xa4\x55\x0e\x3c\x2b\x89\xb1\xe7\x12\x1d\x72\x45\xdf\x9a\xf9\xa6\x7b\xf3\x9b\xee\xd5\x22\x9f\xa9\xf5\xa5\xb8\x47\x3a\x64\x6e\xb8\xc6\x77\x5d\xe1\x3b\x4b\xd9\x3f\xf6\x09\xfb\x39\x47\xa6\xfa\x0e\x27\xec\x3f\xeb\xd8\x6c\xb9\xff\x26\x97\x9b\x73\x72\xe8\xf5\x3c\x83\x2d\x92\x47\xcb\x47\x31\xdd\x1e\xe4\x94\xeb\x21\xd1\x09\xef\x8c\x4a\x5f\x8f\xb1\xa3\x28\xe6\x4a\x25\x76\xd9\x90\x85\x5b\x2f\x39\xcd\xad\xb2\xe5\x9a\x7e\x53\x7d\x4e\x7f\x79\xb3\x17\x02\x96\x16\x7d\x70\xef\x4b\x6f\x7f\x5c\xfc\x18\xb5\xdf\x3b\xd1\x9e\x58\xaf\x86\xb4\xb2\x16\x0b\x11\xab\xaf\xa4\xeb\x81\x7d\xea\x5e\x4d\xe8\xfe\x02\xb6\xfb\x13\x00\x00\xff\xff\x55\xc9\x1e\xe6\x4d\x0a\x00\x00")

func compiledMetergovAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergovAbi,
		"compiled/MeterGov.abi",
	)
}

func compiledMetergovAbi() (*asset, error) {
	bytes, err := compiledMetergovAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGov.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergovBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x07\x76\xe3\x30\x0e\xbd\x12\x0a\xd1\x8e\xc3\x7a\xff\x23\xec\xa3\x28\xb7\x38\xe3\x58\xce\x38\xd9\xdd\x91\x9e\x1d\x07\x62\x01\x3f\x3f\x3e\x01\x29\x38\x28\x24\x10\xd2\x9c\x9a\x8a\x25\x15\xa3\xd4\x15\x2d\x69\x98\xaa\x28\x00\x2a\x00\x28\x02\x02\x40\x76\x94\xe4\x68\x3c\x9e\xbc\x80\x30\x50\x03\x9c\x9f\xef\x83\x0a\x84\x16\x20\x22\xa0\x88\x00\xd5\xe7\xfc\x20\x63\x7a\xc2\x31\xbf\x07\x03\x5c\x79\x0f\x90\x58\x71\x6b\x95\x87\xd8\xd6\x4e\xac\x6e\x3e\xbf\x74\x05\x40\x52\xbe\x78\xe4\xa0\x0c\x3a\x5a\xeb\xc0\x98\xe6\x3c\x25\x89\x6d\xd6\x90\x9e\xad\x2c\x2b\xa6\xdd\x8a\x8e\x0a\xad\xb5\x65\xcd\xb1\xac\xc4\xc5\x8d\x4e\xd6\xb6\xb7\x65\xe4\xda\x45\x6d\xb3\x92\xec\x6d\x0d\x32\x38\x31\x2e\xab\xe7\x65\x0d\x69\x1e\x25\xed\xd6\x8e\xcb\x9a\x03\x24\x6a\x29\x9b\x95\x6d\xb7\x96\xc2\x62\xce\xbb\x75\x6e\xef\xb4\x36\x0f\x64\xa9\xcb\x87\x24\x65\xb7\x36\xa5\xde\xb8\x2f\xab\xab\x98\x94\x89\xa2\xc3\x68\x52\x38\x39\xa0\xcc\x55\x57\x58\xe8\x2e\xbb\x6c\x88\xd7\x98\x7d\x46\x13\x9d\x7d\x12\x08\xfa\xb6\x33\x04\x80\x4e\x8e\xc0\x4e\x42\xce\x8e\x8e\x32\x3f\xb4\x9e\x05\x0a\x38\x08\xc6\xde\x36\xc0\xc1\xd9\x79\x8e\x2f\x65\xb6\xc7\x35\x2b\xc2\x86\x89\x13\x6c\xfd\x3d\xc1\x3e\x86\xe3\xec\xb5\xbc\xe8\x7d\xce\x2f\xb0\xee\xd8\x3e\xeb\xb9\x02\x6e\x3b\xb8\xc6\x62\xdd\xc7\xe2\x39\xf7\xe4\xf7\x9c\x91\x00\xf8\xc4\x71\xe0\xc9\xd9\x5b\x3f\xe7\xc8\x41\x6b\xec\xd3\x1a\x03\x81\x03\x06\x5f\xe1\x33\x5b\x7e\xc4\x07\x7d\xf2\x36\x39\xb0\x02\x2f\x8f\x26\x3e\x2c\x47\x22\xe2\x82\x51\x50\x6c\x23\xb0\x7c\xb4\xed\xde\x21\x08\xe7\x9b\xbd\x20\x94\x75\x7f\x58\xd3\xc3\x95\x14\xb9\x5f\x49\xe9\x33\xc8\xa8\xdc\x8e\x7e\x64\xd4\x7e\x8f\x0f\xf1\x9b\xf0\x79\x1b\xbe\x3a\xf8\xdb\xf8\x92\xde\xe3\x4b\x3a\xf1\x75\xb7\xdb\xd1\x15\xa6\x87\xeb\xfb\xc8\x0c\xa1\xf7\x33\xd4\xf2\xf7\xb1\x3e\xe3\xe2\x01\x2f\x33\x83\x7a\xbb\xf7\x76\xa8\x22\x44\xe0\xdb\x94\x85\xcf\x6a\xf0\x67\x65\x61\x2c\x4f\x29\x0b\x2b\xbf\x51\x59\xd8\xee\xf1\xe1\x52\x7f\x58\x59\xa2\xf6\x6f\x33\x9f\x3b\xdd\xad\x24\x25\xfc\x1f\xd3\x80\xe8\xf2\x6d\x24\x92\xda\x3d\x12\x36\xbf\x4b\x6d\x2f\x47\x52\x8a\x4f\xf0\xed\xf6\xdf\x87\xef\x19\xcb\x1a\x72\x74\xb5\x0a\xba\x59\x57\x94\xcf\x15\xad\x4c\x70\xaa\x03\xf8\xa5\xbf\x8d\xab\xbc\xd6\x74\x6c\xc0\x1c\xba\xe6\x58\xa7\xa8\x5f\x5e\x4e\xdb\xc2\x97\x0f\x65\xb5\x47\xda\x5e\x21\x00\x97\xdf\x73\x56\x82\x6d\xee\x43\xc8\xff\xad\x99\x1d\x57\x56\xee\x74\x64\xc4\x83\x28\x0d\xaf\x52\x3a\x76\xe9\xa5\x57\x6b\x52\x1a\xa6\x61\x98\xc8\x1a\x76\x4f\x83\x5b\x9b\x39\x78\x85\x61\x85\x28\xb0\x4b\x21\x80\x5c\xbd\x5a\xe5\x12\x24\x9e\x9e\x65\x52\x9e\x27\xc2\xc6\xc4\xc9\xc8\x8d\x8f\xfb\x0e\x9f\xea\x9e\x00\x49\x71\xae\x7e\x66\x55\xf0\x2e\xdc\x95\x33\xb1\xf6\x6d\xee\xcd\x47\xbc\xae\x3f\xbe\x53\xcb\xc0\x8e\x02\xa4\xb9\x26\x3a\x63\xe0\x3c\xb5\x60\x63\x93\x39\x70\x41\xd9\x15\x44\x67\xe1\x70\xad\x20\x92\x07\x5e\x9e\x56\x13\xe3\xb6\x47\x40\x5f\xbf\xf6\x76\x57\xa7\xd8\xb4\x4f\xc6\xec\x27\xad\xb6\x9b\xf3\xeb\xa2\x41\xd7\xa7\xf4\xb5\x2e\x7c\x1e\x71\x7e\x08\xd3\xbf\x19\x71\xbf\x13\xeb\x92\x26\x7e\xf3\x56\x04\xeb\x3e\x31\x9c\xe8\xda\x00\xaf\x6c\x91\x5f\x26\xc5\x85\x13\x9f\xe5\x54\x33\xb3\xb9\xf8\xe2\x60\x43\xc9\x44\x43\xab\x25\x0d\xed\x9c\x09\xe6\x5f\x63\x13\x9d\x57\x28\x6b\xa8\x68\xb7\x44\xa0\xa8\x55\xab\x0e\x33\x45\xed\xca\x2a\x27\x1d\x7d\xa0\xea\x1b\x2b\xfe\xcd\x5d\xde\x56\x4d\x4e\x92\x80\x57\x2e\x78\x52\xda\x99\x55\x5b\xf5\x34\x6f\x45\x68\xb8\xd7\x5e\xbb\x6a\xf1\x29\x73\xbc\xe8\x16\xd2\x6d\xe4\xfc\x8a\x92\x31\xe4\x41\x06\x33\xff\xdd\xf6\x98\xde\xa1\x65\x7e\xf0\x1c\x7a\x71\xb7\x76\xae\x3e\xa1\x9b\x91\xc6\x03\xdd\x8c\x59\x1f\x1c\xd6\xcd\xb0\x78\x41\x37\xd7\x7f\xfa\x45\x9e\x94\x6e\xf3\x24\x49\x42\xc9\xbe\xa3\x27\x1f\x55\x7b\xfa\xdf\x0a\xf3\x1f\xd8\xfb\xe1\xcc\x3d\x16\x7b\x7e\x88\xbf\x98\xb6\x77\x88\x25\xb1\x98\x1c\x9c\xe9\x37\x22\x08\x24\x42\xa0\x87\xeb\x3f\x15\x41\x79\xc0\x83\x08\x2a\x90\x5e\x88\xa0\x82\xf9\x58\x04\x1d\xe3\x95\x94\xfd\x74\x2e\xc5\x7e\xee\x74\x26\xf8\xea\x74\x36\x56\xd1\xaa\x4a\xa0\xc3\x88\x40\x9b\xa2\xf1\xaa\x84\x08\x8c\x54\x0c\x67\x9f\xf9\x4b\xd3\x33\xa7\xf3\x56\x97\xd2\x91\xb3\xe8\xe7\xe3\xa6\xe7\x1c\x3c\xb4\xfc\x7a\x0e\x5d\x45\x1e\x30\xb9\x6a\xbc\xc0\xe4\x6a\xe3\x5b\x39\xf4\xca\x33\xde\x86\xfe\x97\x19\xce\x2f\x65\xd0\x9f\x9d\x35\x8e\x88\x1b\xa6\xc3\xd6\x5b\xd2\x1f\x67\x2a\x95\xd2\x93\x5a\xf7\x74\xce\x92\xf8\x4d\x1a\xff\x03\xb8\xdf\x54\xda\xe7\xb7\x99\x4f\xc4\x49\xeb\xf1\x20\x4e\xda\x68\x2f\xc4\x49\x47\x3e\x16\x27\xbb\x82\xf7\xf8\xc9\xfa\xaa\x7d\xa3\xbe\xa2\xad\xc2\x3a\xd7\x56\x00\xcf\xd5\x57\xbf\xc1\xf3\x36\xcc\xb2\xb6\xb4\xde\xbf\xff\x7f\xf2\x1c\xbe\xe6\xf9\x90\xf6\x80\xe7\xc3\xf0\x31\xcf\x27\x8b\x0f\x79\x7c\xf0\x9d\x5b\x6b\x83\x84\x72\xc3\xd2\xa9\x7a\x14\x8d\x4a\x05\xd4\x47\x65\xf3\x96\x73\x08\x95\x6c\x03\x95\x6b\xca\x88\x4a\x3e\x44\x72\x6a\x43\x88\x0b\xf7\x71\xde\xdb\x27\xde\xb9\x9d\xb2\x04\x80\x8c\x2a\x4a\x96\x2d\x1b\x31\x88\x13\x54\xc8\x94\x9a\xb0\x85\xf6\xaa\xd2\x2b\xb4\x06\x54\x0b\x32\x33\x37\xac\x95\x22\x57\x54\x4e\x9a\x23\x9a\x2b\x07\x36\xc6\x24\x89\xd4\x1d\xf3\x00\xa0\xf8\x4f\x00\x00\x00\xff\xff\x77\x75\xc2\x4c\xd6\x20\x00\x00")

func compiledMetergovBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergovBin,
		"compiled/MeterGov.bin",
	)
}

func compiledMetergovBin() (*asset, error) {
	bytes, err := compiledMetergovBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGov.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMetergovBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x58\x0b\x76\xe2\xb0\x0e\xdd\x92\x3e\xd6\x6f\x39\xfe\xee\x7f\x09\xef\x38\x0e\x50\x4a\x87\x12\x18\xda\xf7\xde\x24\xa7\x0c\x23\x1c\x5b\xbe\xbe\xba\x92\xa2\xe0\xa0\x90\x40\x48\x01\x12\x2b\x82\x22\x40\x1e\x62\x0a\x00\x2c\x56\x01\xe1\xc9\x2b\x00\x92\xf2\xd8\x2f\x54\x07\x65\xd0\xd1\x5a\x07\xc6\x34\xd7\x29\x49\x6c\xb3\x86\xf4\x6c\x65\x59\x31\xed\x56\x74\x54\x68\xad\x2d\x6b\x8e\x65\x25\x2e\x6e\x74\xb2\xb6\x7d\x2c\x23\xd7\x2e\x6a\x9b\x95\x64\x1f\x6b\x90\xc1\x89\x71\x59\x3d\x2f\x6b\x48\xf3\x28\x69\xb7\x76\x5c\xd6\x1c\x20\x51\x4b\xd9\xac\x6c\xbb\xb5\x14\x16\x73\xde\xad\x4d\x97\xb5\x79\x20\x4b\x5d\x3e\x24\x29\xbb\xb5\x29\xf5\xc6\x7d\x59\x5d\xc5\xa4\x4c\x14\x1d\x46\x93\xc2\xc9\x01\x65\xee\xba\xc2\x42\x77\xd9\x65\x43\xbc\xc6\x7c\x66\x34\xd1\xf9\x4c\x02\x41\xdf\x4e\x86\x00\xd0\xc9\x11\xd8\x49\xc8\xd9\xd1\x51\xe6\x1f\xad\xdf\x02\x05\x1c\x04\x63\x1f\x1b\xe0\xe0\xec\x3c\xe7\x97\x32\xc7\xe3\x5a\x15\x61\xc3\xc4\x09\xb6\xe7\x3d\xc1\x3e\x87\xe3\x7c\x6a\x79\xd1\xfb\x5c\x5f\x60\xdd\xb1\xfd\xad\xdf\x15\x70\x3b\xc1\x35\x17\xeb\x3e\x17\xcf\xb5\x75\xfa\xc8\xdb\xfa\xbc\xad\x04\x90\x81\x31\x50\xaf\xfd\x9c\x33\x07\xad\xb9\x4f\x7b\x0c\x04\x0e\x18\xfc\x01\x9f\x39\xf2\x33\x3e\xe8\x63\xf2\xd3\x81\x15\x78\x79\x34\xf1\x61\xb1\x33\xbf\xbe\xbb\x50\x2f\x18\x05\xc5\x36\x03\xcb\x67\xdb\xee\x1d\x82\x70\xbe\x3a\x0b\x42\x59\xf7\xa7\x3d\xdd\xdd\x49\x91\xdb\x9d\x94\x3e\x83\x8c\xca\xf5\xec\x47\x66\xed\xb7\xf8\x10\xbf\x09\x9f\xb7\xe1\xab\x83\x5f\xc6\x97\xf4\x16\x5f\xd2\x89\xaf\xbb\x5d\xcf\xae\x30\x3d\x5c\x9f\x47\x56\x08\xbd\x5d\xa1\x96\xbf\x8f\xf5\x19\x17\x0f\x78\x9a\x19\xd4\xdb\xad\xb7\x43\x15\x21\x02\xdf\xa6\x2c\x7c\x56\x83\x3f\x2b\x0b\x63\x79\x48\x59\x58\xf9\x8d\xca\xc2\x76\x8b\x0f\x97\xfa\xc3\xca\x12\xb5\xbf\xcc\x7c\xee\x74\xb3\x93\x94\xf0\x7f\x4c\x03\xa2\xcb\xcb\x48\x24\xb5\x5b\x24\x6c\x7e\x96\xda\x9e\x8e\xa4\x14\x5f\xe0\xdb\xed\xbf\x0f\xdf\x33\x96\x35\xe4\xe8\x6e\x15\x74\xb3\xae\x28\x9f\x3b\x5a\x95\xe0\x54\x07\xf0\xcb\xf3\x36\xd2\x2c\x7c\x92\x8a\x51\x32\x1d\x1b\x30\x87\xae\x39\xd7\x29\xea\x97\x97\xd3\xb6\xf0\x65\x3e\xb2\xff\x23\x63\x3f\x20\x00\x97\xef\x73\x55\x82\x6d\xed\x43\xc8\xff\xad\x95\x7d\x9e\x9a\x08\x38\x1d\x99\xf1\x20\x4a\xc3\xab\x94\x8e\x5d\x7a\xe9\xd5\x9a\x94\x86\x69\x18\x26\xb2\x86\xdd\xd3\xe0\xd6\x66\x0d\x5e\x61\x58\x21\x0a\xec\x52\x08\x20\x57\xaf\x56\xb9\x04\x89\xa7\x47\x99\x94\x67\x46\xd8\x98\x38\x19\xb9\xf1\x71\x3f\x61\xdd\xf7\x1c\x20\x29\xe0\xa4\xdf\xb3\x2b\x78\x17\xee\xca\x99\x58\xfb\xb6\xf6\xe6\x23\x7e\xec\x3f\x5e\xe9\x65\x60\x47\x01\xd2\xdc\x13\x9d\x31\x70\x9e\x5a\xb0\xb1\xc9\x1c\xb8\xa0\xec\x0a\xa2\xb3\x71\xf8\xa8\x20\x92\x07\x5e\x7e\xad\x26\xc6\x6d\x8f\x80\xbe\xbe\xed\xe3\x3e\x64\xb1\x69\x9f\x8c\xd9\x33\xad\xb6\xab\xfc\x75\xd1\xa0\x8f\x59\xfa\xa3\x2e\x7c\x1d\x71\x7e\x08\xd3\xbf\x19\x71\xbf\x13\xeb\x92\x26\x7e\xf3\x56\x04\xeb\x3e\x31\x9c\xe8\xda\x00\xaf\x6c\x91\x9f\x26\xc5\x85\x13\x5f\xd5\x54\xb3\xb2\xb9\xf8\xe2\x60\x43\xc9\x44\x43\xab\x25\x0d\xed\x9c\x09\xe6\xbf\xc6\x26\x3a\xaf\x50\xd6\x50\xd1\x6e\x89\x40\x51\xab\x56\x1d\x66\x8a\xda\x95\x55\x4e\x3a\x7a\x47\xd5\x37\x56\xfc\x9b\xa7\xbc\xed\x9a\x9c\x24\x01\xaf\x5a\xf0\xa4\xb4\xb3\xaa\xb6\xea\x69\xde\x8a\xd0\x70\xef\xbd\x76\xd5\xe2\x53\xe5\x78\xd1\x2d\xa4\xeb\xc8\xf9\x15\x25\x63\xc8\x83\x0c\x66\xfd\xbb\x9d\x31\xbd\x43\xcb\xfc\x60\x1e\x7a\xf2\xb4\x76\xae\x3e\xa0\x9b\x91\xc6\x1d\xdd\x8c\xd9\x1f\x1c\xd6\xcd\xb0\x78\x42\x37\xd7\xff\xf4\x9b\x3a\x29\x5d\xd7\x49\x92\x84\x92\xbd\xa2\x27\x9f\x55\x7b\xfa\xdf\x0a\xf3\x1f\xd8\xfb\x29\xe7\x1e\x8b\x3d\x3f\xc4\x5f\x4c\xbe\xd5\xd5\x89\xc5\xe4\xe0\x4a\xbf\x11\x41\x20\x11\x02\x3d\x5c\xff\xa9\x08\xca\x03\xee\x44\x50\x81\xf4\x44\x04\x15\xcc\xc7\x22\xe8\x18\xaf\xa4\xec\xd9\xb9\x14\xfb\xb9\xec\x4c\xf0\x5d\x76\x36\x56\xd1\xaa\x4a\xa0\xc3\x88\x40\x9b\xa2\xf1\xea\x84\x08\x8c\x54\x0c\xe7\x33\xf3\x9b\xa6\x47\xb2\xf3\xd6\x97\xd2\x91\x5c\xf4\xf3\x71\xd3\x73\x0e\x1e\x5a\x7e\xbd\x86\xae\x22\x77\x98\x5c\x35\x9e\x60\x72\xb5\xf1\x52\x0d\xbd\xea\x8c\xb7\xa1\xff\x6d\x85\xf3\x4b\x15\xf4\x57\xb9\xc6\x11\x71\xc3\x74\xd8\x7a\x4b\xfa\xe3\x4c\xa5\x52\x7a\x52\xeb\x9e\xce\x55\x12\xbf\x49\xe3\x7f\x00\xf7\xab\x4e\xfb\xfc\x36\xf3\x81\x38\x69\x3d\xee\xc4\x49\x1b\xed\x89\x38\xe9\xc8\xc7\xe2\x64\x57\xf0\x1e\x3f\xd9\x5f\xb5\x17\xfa\x2b\xda\x3a\xac\x73\x6f\x05\xf0\x58\x7f\xf5\x1b\x3c\x6f\xc3\x2c\x6b\x4b\xeb\xfd\xfb\xff\x27\xcf\xe1\x7b\x9e\x0f\x69\x77\x78\x3e\x0c\xef\xf3\x7c\xb2\xf8\x90\xc7\x07\xdf\xb9\xb5\x36\x48\x28\x37\x2c\x9d\xaa\x47\xd1\xa8\x54\x40\x7d\x54\x36\x6f\x39\x87\x50\xc9\x36\x50\xb9\xa6\x8c\xa8\xe4\x43\x24\xa7\x36\x84\xb8\x70\x1f\xe7\xb3\x7d\xe0\x9d\xdb\xa9\x4a\x00\xc8\xa8\xa2\x64\xd9\xb2\x11\x83\x38\x41\x85\x4c\xa9\x09\x5b\x68\xaf\x2a\xbd\x42\x6b\x40\xb5\x20\x33\x73\xc3\x5a\x29\x72\x45\xe5\xa4\x39\xa2\xb9\x72\x60\x63\x4c\x92\x48\xdd\x31\x0f\x00\x8a\xff\x04\x00\x00\xff\xff\x4f\x54\x76\x69\x18\x20\x00\x00")

func compiledMetergovBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMetergovBinRuntime,
		"compiled/MeterGov.bin-runtime",
	)
}

func compiledMetergovBinRuntime() (*asset, error) {
	bytes, err := compiledMetergovBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterGov.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeternativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x94\xc1\x4e\xc3\x30\x0c\x86\xdf\xc5\xe7\x9e\x90\xe0\xb0\x23\x12\xc7\x9d\xe0\x36\x4d\x95\xdb\x78\x25\xa2\xb5\xab\xc4\x9e\xa8\xa6\xbd\x3b\xa2\xa2\x5d\x61\x19\xbb\x30\x58\xc5\x31\x6a\xfc\xc5\xff\x57\x27\xab\x1d\x94\xc2\x51\x91\x15\x16\x1b\xac\x23\x65\xe0\xb9\x35\x8d\xb0\x58\xed\x80\xb1\x21\x58\x00\x3a\x17\x20\x03\xed\xda\x61\x45\x31\xc2\x7e\x9d\x0d\x1b\x18\xd5\x6f\x29\x6f\x34\xe4\x15\x29\x64\x20\xa6\x5f\x21\x07\x80\x79\xd6\x9b\xdb\xbb\x1e\xd0\x62\x87\x45\x4d\xe3\xe1\x51\x51\x69\x69\x8a\x85\xaf\xbd\x76\xef\x6c\xe1\x61\xd3\x48\xd8\x18\x97\xea\x85\x61\x9f\xfd\x6c\x00\x8c\x4a\xe1\x5c\xff\xd3\xfa\x8b\xf6\x9f\x14\xac\xa2\x58\x3f\x5a\xdb\xd6\xdd\x6c\x44\x67\x87\x0d\x8d\x18\x6b\xba\xc5\xa3\xac\x55\x1e\xad\x38\x17\xb2\x10\xa9\x67\x9b\x30\x47\xe7\x3e\x05\xfc\x8b\x91\xaa\x66\x39\x53\xe9\x24\xd7\xf4\xfc\x9c\xbe\xbe\xf7\x16\x98\xdc\xd5\x34\x7a\xb1\xeb\x7b\x45\xd3\xfd\x3f\x94\xff\xf6\x83\x39\x35\x3f\xe2\x34\x58\x92\x76\x84\xea\xf5\x04\x2b\x55\x42\x4f\x43\x16\xee\x1a\xb1\x98\xf2\xe5\xd9\xd1\x2b\xb9\xf1\xd3\x47\xae\x7c\x50\x96\x74\x78\xb2\xe8\x94\xd4\x6f\x6a\x1a\xd2\x67\x71\x87\x9a\xa8\xc1\x73\x35\xfd\x0f\x4b\x52\x0a\x4f\x01\xcb\x17\x0a\x0f\x5b\x9a\x1e\x40\xfd\x72\xbf\x7e\x0b\x00\x00\xff\xff\xdb\x2c\xe6\x96\x71\x09\x00\x00")

func compiledMeternativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeternativeAbi,
		"compiled/MeterNative.abi",
	)
}

func compiledMeternativeAbi() (*asset, error) {
	bytes, err := compiledMeternativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeternativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x6d\x76\xe4\x38\x08\xbc\x52\x01\x02\xc4\x71\xf4\x79\xff\x23\xec\x93\xdd\x33\xdb\x59\xef\xcc\xb8\x9d\x4e\xa6\x5f\x5e\xec\x97\xfc\x28\x63\x5c\x94\x50\x89\x36\x64\x18\x12\x94\x8d\x50\x63\x64\x18\x01\x24\x06\x40\x62\xfd\x9f\x02\xdc\x45\x01\x49\x8c\xb6\xa8\x32\xd5\xb7\x38\xf5\x06\xc2\xc5\x2b\x80\x64\x32\x6f\x17\x59\x86\x09\x94\xa8\x07\x84\xd2\xfa\x4e\x4d\xea\x3b\x1a\xa1\x18\xb1\xa1\x84\x7a\x43\xdd\x86\x18\xf5\x1d\xcd\x63\x47\xb9\xd6\x91\xcc\xc7\x8e\xd6\xd8\x51\x4f\xa8\xa4\x3a\x37\x94\xe9\x16\x5b\x58\x6c\x00\xd8\x51\xbb\xe5\x2d\x82\x32\xd9\x6f\x68\xd8\x8e\xb6\xd6\xbc\xcf\xd8\xbf\xc6\xa3\xef\x68\x9f\xee\xc5\x7a\xda\x50\xa1\xbc\xa3\xa3\x94\x90\x69\x75\x47\x4d\x77\x74\x7d\x3c\xe9\xd4\x1d\x0d\xa8\x6b\x5d\x2a\x66\xcc\xae\x55\x52\x06\xe9\xaa\xba\x61\x57\x77\xc7\x75\x53\x7c\xea\xd2\x3f\x43\x0c\x92\x09\x14\xc8\xc8\x4b\xff\x9f\xfa\xfd\xe9\x22\x0b\x18\x18\xeb\xdd\xe0\xa0\x80\x6e\xf7\xe2\x32\x55\x6d\x71\x49\x50\xca\xc8\x9c\x69\xad\xf7\x16\x4b\x5b\xcc\xed\x49\x6c\xbc\xa7\xdc\xb1\x25\xf2\x03\x5b\x4a\xed\x03\xd9\xa6\xf2\x1f\xb6\x8f\x64\x7d\x24\xf6\x11\x15\xa2\x1c\x55\x28\x6b\xbb\xa8\xbe\x43\xdb\xa6\x87\xac\x8c\xf4\x7c\x6d\xd7\xfb\xbf\xd4\xdb\x20\x6f\x2b\x20\xdd\xef\x07\x2a\x61\x3e\xea\xc3\x16\x9f\x5d\x49\xdd\x2a\x01\xee\x99\xf9\xb1\x7f\x79\xf3\x42\xd7\x7a\x79\xe5\xb8\xf0\x31\x6b\xf7\x0f\xdc\x15\x19\xe3\x3a\xdb\x19\x07\xb6\x82\x75\x2e\xe4\x7a\x3d\xab\x70\x3a\x66\x35\xf9\xe4\x35\x0f\x6b\x87\x35\x17\xa7\x23\x33\x2f\x46\x28\x94\xae\xd7\x1b\xed\x98\xb5\xd7\x4f\xae\xb7\x34\xbe\xba\x5b\x17\x77\x9f\xc3\x45\x66\xaf\xe1\xb5\x83\xcb\xc8\xd9\x93\x71\x15\xcc\x90\x6c\x2a\xc3\x8b\x83\xda\xc4\x68\xc1\xb3\x71\xee\x69\xa8\xf7\x64\x1c\x46\x93\x29\xe5\x35\x29\xfc\xcc\x9e\xe5\xe3\xdd\xf9\x7e\x95\x32\xfe\xc5\x20\x99\xb7\xb9\x65\xdc\x3f\xf7\x69\xc3\xc8\x93\x85\x9b\xa9\x4e\xeb\x9e\x9c\x75\x9a\x9b\x7a\x3a\x33\xb7\xac\x6c\xfa\x43\x7f\xd1\x1f\xda\xbf\xd1\xb3\x90\x6d\x13\x8e\xe2\xb6\x3a\xf6\x85\xf5\xed\xbf\xd7\xd7\xc8\xc5\x93\xa9\xf3\xb9\xb9\xf0\xef\xea\x2b\xf2\x6a\xfa\xbe\x89\xfd\x65\xff\x7a\xb2\xf5\x47\xd6\x54\x5c\x1d\x0e\x6b\x1e\x4f\xd0\xf7\x99\xbd\x2b\x59\x5e\x49\x59\xcc\x3f\x2b\x6b\xae\xd3\xc5\xd5\x4e\x74\xef\x69\x65\xb7\x9e\x5d\xce\xad\xb7\xde\x7d\x86\x2f\x2c\x67\x78\x21\x6d\xcf\xb9\x2e\x59\xb2\x27\xba\xae\x7e\x75\x2f\xf0\x93\x1d\x7b\xd2\x0d\x4e\x76\xac\x62\xfd\xf2\x90\x05\xc3\x9e\xee\x0a\xaf\x77\xa2\x9d\xf4\x85\xb3\x33\xc3\xf7\x89\xf6\xbe\x13\x2d\xb1\xab\xb3\x0d\xd3\xff\xf7\x8a\x2b\x27\xda\x17\x74\xdc\xb3\x5d\x7b\xd2\x73\xbf\x1d\xf7\x9a\xe3\xfe\xbe\x5b\xbf\xa7\xaf\xc7\x26\x84\xb3\xb3\xd7\xf5\xe9\x0b\xdb\x09\x67\xec\xc5\x8b\xb3\x40\x33\xc3\x9b\xd4\xaa\x5e\x33\x47\x47\x9e\x5a\xc5\x5a\x4e\xad\x37\x49\x92\x66\xb0\xd0\xec\xec\xa8\xd1\x6a\x2e\xdd\x05\xf0\xc2\xcc\x09\xc5\x52\x2b\xd3\x00\x8e\x7f\x02\x00\x00\xff\xff\xf4\x9d\x20\x91\x62\x17\x00\x00")

func compiledMeternativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeternativeBin,
		"compiled/MeterNative.bin",
	)
}

func compiledMeternativeBin() (*asset, error) {
	bytes, err := compiledMeternativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledMeternativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x5b\x72\xdc\x38\x0c\xbc\x52\xe3\x4d\x1e\x87\xcf\xfb\x1f\x61\x8b\x92\x92\xb5\x57\x9b\x44\x23\x8f\x1d\x97\xcb\x52\xd9\x1f\x2d\x0a\x6a\x34\xc0\x26\xc6\x91\xe0\x50\x18\x3b\xa0\xe2\x04\x27\xa0\x4c\x0b\x07\x20\x16\x0d\x84\x9b\x57\x06\xd4\x65\x1e\x17\x79\x82\x0b\x8c\xa8\x67\x08\xe9\xfa\x4e\x55\x8b\x1d\xcd\xd9\x30\xf2\x86\x12\xea\x81\x86\x0f\x71\xea\x3b\x9a\xc6\x8e\x72\xad\x43\x3d\xc6\x8e\xd6\xbc\xa3\xa1\xa8\x64\x36\x37\x94\xe9\x58\x5b\x58\x7c\x00\xd8\x51\x3f\xe2\x16\x41\x99\x1c\x07\x9a\x7d\x47\x5b\x6b\xd1\x67\xde\xbf\xc6\xa3\xef\x68\x9f\x11\xc5\xbb\x6e\xa8\x50\xda\xd1\x51\x4a\x96\xe9\x75\x47\xdd\x76\x74\x7d\x5c\x6d\xda\x8e\x66\x58\x58\x5d\x2a\x26\xcc\x6e\x55\x34\x81\x6c\x65\xdd\xb0\xab\xbb\xe3\xb6\x29\x3e\x6d\xe9\x9f\x20\x0e\x49\x04\xca\x48\x48\x4b\xff\x9f\xfa\xfd\xe9\x22\xcf\x70\x30\xd6\xbb\x99\x33\x65\xd8\x76\x2f\x2e\xd3\xcc\x17\x17\x85\x51\x42\xe2\x44\xab\xde\xdb\x5a\xda\xd6\x1c\x4f\xf2\xc6\x7b\xca\x0b\xb6\x44\x71\x62\x4b\xda\xde\x91\xad\x96\xff\xb0\x7d\x24\xea\x23\x6b\x1f\x51\x21\x97\xb3\x0a\x65\x6d\x17\xb3\x37\x68\xdb\xec\x14\x95\xa1\xcf\xd7\x76\xbd\xff\x4b\xbd\x1d\xf2\x3a\x03\xb2\xfd\x7e\x20\x13\xe6\xb3\x3e\xec\xf9\xa3\x33\xa9\x5b\x26\xc0\x4b\x66\x71\xee\x5f\x4e\xeb\x7f\x58\xbd\x5d\x39\x2e\x7c\x8e\xda\xe3\x1d\x77\x45\xc2\xb8\xcf\x76\xe6\x13\x5b\x01\xaf\xa8\xf5\x7e\x54\x61\x3d\x47\x75\xf9\xe0\x9a\x67\x6f\xa7\x9a\x4b\xd0\x99\x59\x14\x27\x14\xd2\xfb\xf9\xe6\x76\x8e\xda\xeb\x07\xe7\x5b\x1a\xdf\xdd\xad\x8b\x7b\xcc\x11\x22\xb3\xd7\x1c\xb5\x83\xcb\x48\x29\xd4\xb9\x0a\x66\x96\xe4\x26\x23\x4a\x80\xda\xc4\x68\x99\x67\xe3\xd4\x75\x58\x74\x75\xce\x4e\x93\x49\xd3\x9a\x14\x7e\x46\x4f\xf2\xfe\xee\xfc\xb2\x4a\x09\xff\x62\x90\xc4\xdb\xdc\x32\x5e\x3e\x8f\xe9\xc3\x29\xd4\x73\xb8\x9b\x4d\xef\xa1\xc1\x36\x3d\xdc\x42\xaf\xcc\x2d\x2b\x9a\xfd\xd0\x5f\xec\x87\xf6\xaf\xf4\x2c\xe4\xdb\x84\x63\x38\xaa\xe3\x5f\x58\xdf\xfe\x7b\x7d\x9d\x42\x42\xdd\x82\xaf\xcd\x85\x7f\x57\x5f\x91\xcf\xa6\xef\xab\xb5\xbf\xec\xdf\x50\x5f\x7f\xe4\xcd\x24\x2c\x10\xf0\x16\xf9\x09\xfa\x3e\xb3\x77\x25\xc9\x67\x52\x16\xf3\xcf\xca\x7a\xd8\x0c\x09\xf3\x0b\xdd\x7b\x59\xd9\xad\x67\x97\x73\xdb\xd1\xbb\xcf\xf0\x85\xe5\x0c\x9f\x48\xdb\x6b\xae\x4b\xae\xfe\x44\xd7\xb5\xaf\xee\x05\x71\xb1\x63\x2f\xba\xc1\xc5\x8e\x35\xac\x5f\x1e\xb2\x60\xf8\xd3\x5d\xe1\xf3\x9d\x68\x17\x7d\xe1\xea\xcc\xf0\x7d\xa2\xbd\xed\x44\x53\x0e\x0b\xf6\xe1\xf6\xff\x5e\x71\xe7\x44\xfb\x82\x8e\x7b\xb5\x6b\x2f\x7a\xee\xb7\xe3\xde\x73\xdc\xdf\x77\xeb\xf7\xf4\xf5\xd8\x84\x70\x75\xf6\xba\x3f\x7d\x61\x3b\xe1\x9c\xa3\x44\x09\x16\x58\x62\x44\x93\x5a\x2d\x6a\xe2\xdc\x91\xa6\x55\xf1\x96\xb4\xf5\x26\x2a\x3a\x33\x0b\xcd\xce\x81\x9a\x5b\x4d\xa5\x87\x00\x51\x98\x59\x51\x5c\x5b\x99\x0e\x70\xfe\x27\x00\x00\xff\xff\x4f\x45\xa1\x08\x3c\x17\x00\x00")

func compiledMeternativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledMeternativeBinRuntime,
		"compiled/MeterNative.bin-runtime",
	)
}

func compiledMeternativeBinRuntime() (*asset, error) {
	bytes, err := compiledMeternativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/MeterNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x92\xc1\x6a\xc3\x30\x10\x44\xff\x65\xcf\x3a\xa5\xb4\x07\xdf\xfa\x01\x3d\xe5\x18\x42\x59\xdb\x93\x22\xea\xac\x8c\xb5\x72\x23\x42\xfe\xbd\xa4\xc8\x95\x12\x5c\x1c\x68\xa0\xf4\x68\x3c\x23\xde\xcc\xce\xe6\x48\x8d\x13\xaf\x2c\x4a\x95\x0e\x01\x86\xac\xf4\x41\x3d\x55\x9b\x23\x09\xef\x41\x15\xbd\xbe\x23\x92\x21\x8d\xfd\xf9\xab\x8e\x0a\xff\xb0\xa2\xd3\xd6\x4c\x82\x37\xe8\x73\xdb\x0e\xf0\x9e\x0c\xb9\xa0\xd7\x0f\x64\x33\x27\xd9\xd9\xdc\x73\xe4\xba\x03\x55\x3b\xee\x3c\x0c\x79\x65\xc5\x4b\x50\xae\x6d\x67\x35\x52\x45\xa3\xc5\x47\xf6\xee\x82\x34\x6a\x9d\xd0\xc9\x94\xd4\xc9\x7d\x33\xb6\xc9\x82\x91\xbb\x80\x2c\x09\x56\x74\xf5\xf8\x54\x26\xf3\xd0\x8b\x48\x37\x61\x8b\x93\x49\xb4\x04\xff\x9b\xca\x97\xba\x2e\xe3\xdc\xa9\xeb\x2b\xdc\x8c\x83\x03\x9a\xa0\x6e\xf8\xd7\xf7\x2f\xe1\xf2\xfd\xe7\x96\x7d\x9f\x19\xb0\x38\x89\x7b\x17\xfc\x5c\x08\x2b\x2d\x0e\x68\xa7\xce\x13\xcf\x8f\x91\xbe\xe5\xe9\xa5\xa4\x5f\x5e\xf8\xfa\x6b\x48\xe9\x3f\x46\x88\xfe\x11\xdb\x4c\xfb\xeb\xb2\xfd\x4b\xc4\xed\x67\x00\x00\x00\xff\xff\x0a\xf3\x76\xd6\xba\x04\x00\x00")

func compiledParamsAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsAbi,
		"compiled/Params.abi",
	)
}

func compiledParamsAbi() (*asset, error) {
	bytes, err := compiledParamsAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x0b\xae\xdb\x38\x0c\xbc\xd2\x90\x14\x7f\xc7\x91\xf5\xb9\xff\x11\x16\xb2\x9d\xe6\xa5\xe9\xcb\x3e\xa7\x68\xbb\x0b\xd4\x01\x62\x87\x92\x4d\xcd\x70\x38\x72\x0c\x01\x43\x81\xb2\x94\x00\xa9\x11\x40\x50\x37\x00\x81\xd9\x75\x53\x18\xc1\x6b\x8f\x75\x06\x63\x8d\x48\xae\xef\x29\xc0\xfd\x7e\x03\x8a\x18\xed\xb3\xac\x1f\x4f\x10\xf5\x06\xc2\x9b\x47\x02\xc5\x64\x9e\x07\x59\xc0\x84\x69\x46\x75\x26\x2a\x2b\x8f\xb3\xfa\x1e\x75\x99\x25\x0b\x8e\xe8\x90\x23\x1a\xa3\x56\xab\xed\x88\x12\x8d\x23\xda\xa4\x34\xc4\xd0\x23\x6a\xe7\xdc\x56\x4b\xb1\xde\xf3\x88\x6e\x55\x5d\xb7\x3b\x07\x77\x6e\x7c\x3c\x71\x83\x4a\x0b\x7b\x40\x0c\x12\x04\x4a\x04\x02\xa2\x6b\x1e\x25\x59\xc2\xc0\xeb\x12\xc9\x49\x09\xdd\x3f\x46\x60\x6c\x6a\x2b\x4f\x81\x52\x20\x16\x8c\x2f\x1e\x64\x57\xe6\x06\xad\xfa\xec\x6b\xa0\x3d\xf7\x99\x31\x09\x92\x98\xf2\x11\xe1\x98\x4f\x08\x89\xda\x35\x84\x6b\xec\x73\xd4\xcd\x16\x6a\xe0\x43\x56\xe2\xfa\x9c\xb5\xf4\x37\x79\x2d\xc5\x1f\x79\xbd\x80\x9f\xec\x07\xf8\x3d\x8c\xa0\xe0\xff\x5c\xb5\xa8\xd9\xd3\x6a\x19\x79\xbd\x5a\x57\xd6\xf7\x29\xef\x5a\xe3\x56\xd9\xbd\xfb\x71\xe5\xa9\x26\x73\x53\x2f\xb2\x65\xc8\x89\x98\x3f\x76\xff\xcf\x38\x09\x4e\x05\xa0\x60\xaf\xdc\x8d\x89\xdb\xf9\x99\x71\xfe\xc6\x7a\xc8\x62\x71\xe7\xd8\x03\xb2\x91\x9e\xdc\x73\x94\x47\xee\xb5\x4e\xba\x8f\x66\xa8\x4b\x3f\xc6\x65\x1c\x57\xe7\x3c\xdc\xab\xba\xe2\x8c\x20\x3a\xef\xaa\x0f\xfe\x72\xaf\x9e\xd2\x8f\x59\x5f\xe7\xf3\xd7\xd2\xe6\xea\xae\x71\xd7\xea\x15\xfe\x45\xae\xcc\xa6\x42\xba\xaf\x58\x7c\xdf\x2d\x16\x16\x9f\x88\x26\x9e\xf5\xed\x32\x3d\x54\xe9\xc4\xbb\xba\x17\x12\xbc\x46\xa8\xde\x2b\x15\xf0\x69\xec\x6a\x69\xcd\x8b\xa5\x0d\xa9\x0c\x53\x0f\x53\x13\x57\x2f\x36\x9d\x19\xce\xa6\x4e\x6b\xde\xba\xb2\xf2\x7d\x3e\xc5\x8b\x5e\x5b\xde\x7f\x51\xc5\x5c\xd2\x6a\x4a\x0d\xf9\xa6\x63\xf9\x45\x3a\x96\xcf\x75\xfc\xe0\x79\x7c\x53\x1c\xfe\x5d\xd5\xf2\xbd\xff\x3f\xa8\xba\xec\x56\xf1\x42\xd5\xc7\x33\xd7\x5a\x7c\x72\x0c\xe1\x62\x73\xa9\x57\xa7\x36\x1a\x3d\xc3\x37\x12\x19\x93\x27\xa5\x14\xc9\x8d\xb5\xb6\xad\x5a\xd5\x61\x39\x99\x72\x44\xda\x6c\xd9\xc9\x73\xf5\xe9\xd7\x1c\xbc\x1e\x08\xed\x3d\xdf\xd9\x3a\x29\xc6\xa8\xff\x13\xdf\x29\x0d\xaf\x2a\xd4\xcb\x1b\xbe\x53\x46\xfd\x29\xdf\x79\x83\xf5\xe4\x4a\x36\x7b\x3d\xf1\xd2\xaf\xe0\xfc\x4b\x7c\xaa\xc5\x0b\x3e\xd5\xdb\x1b\x7c\x6a\xf2\x1b\x7c\xde\x3c\x5c\x37\xfc\x56\x0f\x37\xe5\xbf\x1e\xfe\x51\x9b\xc6\x9e\x75\xea\x1f\xf7\xf0\xdf\xf0\x86\x79\x65\x6f\xb0\xd9\x5f\x74\x8a\x13\x7d\x7d\x6f\x70\x0f\xcf\xda\x87\x76\xcc\xb6\x2a\xac\x36\x7b\x37\x56\x25\x8f\xa6\x95\x6a\x8f\xa1\x63\x70\x1d\x9c\x8e\x11\x1b\xaf\x97\x9b\xc2\x5d\xa2\x47\xaf\x1f\xf7\x86\x3f\xf3\x1e\x7e\xdb\x73\xf6\xff\x7f\x6a\xec\xd5\xab\xb3\x40\x83\xe1\xdb\xa0\xd4\xcd\x62\x66\x2b\xcc\xd3\xa6\xb5\x0e\x61\x77\x2f\xad\x7b\xa4\x6e\xa4\x65\x10\x66\x73\xea\x9b\xcd\x6d\x22\x67\x90\xd4\x1c\x50\xaf\x00\xe7\x3f\x01\x00\x00\xff\xff\xc0\xfc\x73\x49\x9a\x0f\x00\x00")

func compiledParamsBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBin,
		"compiled/Params.bin",
	)
}

func compiledParamsBin() (*asset, error) {
	bytes, err := compiledParamsBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x5b\x92\xdb\x38\x0c\xbc\x52\x03\x20\x5e\xc7\xa1\xf8\xb8\xff\x11\xb6\x28\xc9\xb1\x9d\xc9\x78\x47\x4e\x25\xd9\xad\x8a\xfc\x21\x19\xa4\x05\x76\xa3\xd1\xa4\x0d\x01\x43\x81\xb2\x01\x45\x8c\x60\x04\x58\x57\x37\x00\xa2\xde\x40\x78\xf3\x4a\xa0\x98\xcc\xf3\x22\x0b\x98\x30\xcd\xa8\xce\x44\x65\xe5\x71\x56\xdf\xa3\x2e\xb3\x64\xc1\x11\x1d\x72\x44\x63\xd4\x6a\xb5\x1d\x51\xa2\x71\x44\x9b\x94\x86\x18\x7a\x44\xed\x9c\xdb\x6a\x29\xd6\x7b\x1e\xd1\xad\xaa\xeb\xb6\x10\x04\x66\xd7\x4d\x4a\x80\x74\xcf\x38\x0e\x64\x47\x5c\x77\xb4\x95\x16\xf6\x80\x18\x24\x08\x94\x08\x04\x44\xd7\x3c\x4a\xb2\x84\x81\xd7\x23\x92\x93\x12\xba\x7f\x8c\xc0\xd8\xd4\x56\x9e\x02\xa5\x40\x2c\x18\x5f\xbc\xc8\xae\xcc\x0d\x5a\xf5\xd9\xd7\x40\x7b\xee\x33\x63\x12\x24\x31\xe5\x11\xe1\x98\x1f\x10\x12\xb5\x6b\x08\xd7\xd8\xe7\xa8\x9b\x2d\xd4\xc0\x43\x56\xe2\xfa\x31\x6b\xe9\x6f\xf2\x5a\x8a\x3f\xf3\x7a\x01\x3f\xd9\x0f\xf0\x7b\x18\x41\xc1\xff\xb9\x6a\x51\xb3\x0f\xab\x65\xe4\xf5\x6a\x5d\x59\xdf\xa7\xbc\x6b\x8d\x5b\x65\xf7\xee\xc7\x95\xb7\x9a\xcc\x4d\xbd\xc8\x96\x21\x27\x62\x7e\xec\xfe\x9f\x71\x12\x9c\x0a\x40\xc1\x5e\xb9\x1b\x13\xb7\xfb\x47\xc6\xf9\x1b\xeb\x21\x8b\xc5\x9d\x63\x0f\xc8\x46\x7a\x72\xcf\x51\x9e\xb9\xd7\x3a\xe9\x3e\x9a\xa1\x2e\xfd\x18\x97\x71\x3c\x9d\xf3\x70\xaf\xea\x8a\x33\x82\xe8\xfc\x55\x7d\xf2\x97\x7b\xf5\x94\x7e\xcc\xfa\xba\x9f\xdf\x96\x36\x57\x77\x8d\xbb\x56\xaf\xf0\x2f\x72\x65\x36\x15\xd2\x7d\xc5\xe2\x58\x2b\x5e\x58\x7c\x22\x9a\x78\xd6\xb7\xcb\xf4\x54\xa5\x13\xef\xea\x5e\x48\xf0\x1a\xa1\x7a\xaf\x54\xc0\xa7\xb1\xab\xa5\x35\x2f\x96\x36\xa4\x32\x4c\x3d\x4c\x4d\x5c\xbd\xd8\x74\x66\x38\x9b\x3a\xad\x79\xeb\xc9\xca\xf7\xf9\x14\x2f\x7a\x6d\x79\xff\x45\x15\x73\x49\xab\x29\x35\xe4\x9b\x8e\xe5\x17\xe9\x58\x3e\xd7\xf1\x93\xe7\xf1\x4d\x71\xf8\x77\x55\xcb\xf7\xfe\xff\xa4\xea\xb2\x5b\xc5\x0b\x55\x1f\xef\x5c\x6b\xf1\xc9\x31\x84\x8b\xcd\xa5\x5e\x9d\xda\x68\xf4\x0c\xdf\x48\x64\x4c\x9e\x94\x52\x24\x37\xd6\xda\xb6\x6a\x55\x87\xe5\x64\xca\x11\x69\xb3\x65\x27\xcf\xd5\xa7\x5f\x73\xf0\x7a\x20\xb4\xf7\x7c\x67\xeb\xa4\x18\xa3\xfe\x4f\x7c\xa7\x34\xbc\xaa\x50\x2f\x6f\xf8\x4e\x19\xf5\xa7\x7c\xe7\x0d\xd6\x93\x2b\xd9\xec\xf5\xc4\x4b\xbf\x82\xf3\x2f\xf1\xa9\x16\x2f\xf8\x54\x6f\x6f\xf0\xa9\xc9\x6f\xf0\x79\xf3\x70\xdd\xf0\x5b\x3d\xdc\x94\xff\x7a\xf8\xa3\x36\x8d\x3d\xeb\xd4\x3f\xee\xe1\xbf\xe1\x84\x79\x65\x6f\xb0\xd9\x5f\x74\x8a\x13\x7d\x7d\x6f\x70\x0f\xcf\xda\x87\x76\xcc\xb6\x2a\xac\x36\x7b\x37\x56\x25\x8f\xa6\x95\x6a\x8f\xa1\x63\x70\x1d\x9c\x8e\x11\x1b\xaf\xc3\x4d\xe1\x2e\xd1\xa3\xd7\xc7\xbd\xe1\xcf\x9c\xc3\x6f\x7b\xce\xfe\xff\x4f\x8d\xbd\x7a\x75\x16\x68\x30\x7c\x1b\x94\xba\x59\xcc\x6c\x85\x79\xda\xb4\xd6\x21\xec\xee\xa5\x75\x8f\xd4\x8d\xb4\x0c\xc2\x6c\x4e\x7d\xb3\xb9\x4d\xe4\x0c\x92\x9a\x03\xea\x15\xe0\xfc\x27\x00\x00\xff\xff\x4a\x74\xe1\x86\x5a\x0f\x00\x00")

func compiledParamsBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsBinRuntime,
		"compiled/Params.bin-runtime",
	)
}

func compiledParamsBinRuntime() (*asset, error) {
	bytes, err := compiledParamsBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Params.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x92\xd1\x4a\xc3\x40\x10\x45\xff\x65\x9e\xf7\xa9\xa2\x0f\xf9\x07\xbf\xa0\x84\x32\x49\xa7\xb2\x18\x67\x43\xe6\x4e\x74\x29\xfd\x77\xa9\x98\xb5\xda\x85\x22\x18\xf0\x31\xcc\x0d\xf7\x9c\xd9\xd9\x1e\xa9\x4f\x6a\x60\x05\x35\x07\x1e\x4c\x02\x45\x1d\x1d\x46\xcd\xf6\x48\xca\x2f\x42\x0d\x3d\x4b\xa6\x40\xc8\xe3\xf9\xa3\xcb\x10\xbb\xdb\xd0\x29\x94\xf9\xcc\x83\xcb\x57\xc2\xa3\x62\x73\xff\x40\xa7\x36\x2c\x09\x65\xc4\x59\x76\x26\xa0\x40\xc9\xf1\xd9\xd0\x06\x1a\x39\x73\x37\x48\x69\x37\x30\xe4\xd1\xc1\x5d\x1c\x22\xf2\xf9\xdf\xa4\x4b\xa8\x54\x1c\x5c\x7b\xc4\xa4\x1f\x14\x7f\x6f\xc0\xfb\xfd\x24\x66\x75\x83\xdd\x32\x5d\xd3\x04\x93\x5f\x8a\x5c\x71\xc8\x9b\xf4\x8e\x34\x7d\x83\x28\x3a\x75\x93\xdb\x80\x73\x94\xd7\xdf\xa2\xdd\xd8\xf1\x15\xf9\xd3\x8f\x1b\xa8\x40\x5f\x1e\xd0\xbf\x81\xae\x3e\xfb\x6a\x1b\x6f\xdf\x03\x00\x00\xff\xff\x50\xc5\x62\x5b\x9a\x03\x00\x00")

func compiledParamsnativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeAbi,
		"compiled/ParamsNative.abi",
	)
}

func compiledParamsnativeAbi() (*asset, error) {
	bytes, err := compiledParamsnativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBin,
		"compiled/ParamsNative.bin",
	)
}

func compiledParamsnativeBin() (*asset, error) {
	bytes, err := compiledParamsnativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledParamsnativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledParamsnativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledParamsnativeBinRuntime,
		"compiled/ParamsNative.bin-runtime",
	)
}

func compiledParamsnativeBinRuntime() (*asset, error) {
	bytes, err := compiledParamsnativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/ParamsNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4d\x8f\xda\x30\x10\xfd\x2f\x3e\xe7\x44\xd5\x1e\x72\x45\xea\x8d\xaa\x6a\xd5\x13\x42\xd5\xc4\x19\xa8\x85\x33\x8e\x3c\x63\x50\x84\xfa\xdf\x57\xa0\x25\x31\x4b\x84\x77\xf9\xd8\x84\x23\xe2\x4d\x3c\xcf\xf3\xde\xf3\xcc\x77\x4a\x3b\x62\x01\x12\x95\x2f\xc1\x32\x66\xca\x50\x1d\x84\x55\x3e\xdf\x29\x82\x0a\x55\xae\xfe\x32\xda\xa5\xca\x94\x34\xf5\xfe\x27\x94\xa5\x47\x66\xf5\x3f\xeb\x10\x84\xdb\x19\xb0\xa0\xef\x81\x2d\xb2\x23\x8c\x51\x5a\x94\x0b\xf2\x7a\xce\x22\x53\x35\x34\x50\x58\x6c\x7b\x60\x01\xc1\x59\x10\x28\x8c\x35\xd2\xa8\x5c\x91\xa3\x23\xa8\x3d\x61\x19\x48\x8b\x71\x74\xe8\xa4\xe3\x21\x3e\x5c\x4b\x23\x70\x82\x81\xe1\x3f\xfc\xa6\xfd\xb6\xba\x2b\x2c\x9c\xb3\x87\xaa\x34\xaf\x8d\xc1\xed\x23\x19\xad\xb1\x89\xfa\x6a\x04\xf9\xcb\xe4\x64\x24\xe2\x3c\xac\xf0\xbb\x4b\x93\x8a\x8a\x87\xe7\x55\x58\xa7\xd7\x3f\x42\x55\xc4\x03\x0b\x86\x64\xf2\xf5\x5b\xcc\x0f\x09\xfd\xaa\x49\x71\x8b\x0b\xef\xc4\xed\x16\x37\x25\x65\xe8\xb1\x72\x1b\x3c\x93\xe2\xd0\x4e\xea\x1a\xd4\xc1\x7b\x24\xf9\x5d\x3b\xe2\xb4\xb4\xe2\x0f\x8c\xe0\xfa\xb5\xc7\xd2\x48\x8f\x3a\x22\x8c\x47\xed\x36\xe8\x9b\x5f\x20\x78\x51\x80\x8c\x32\x3d\x7c\xef\xa7\x05\x7a\xe8\xb4\x6e\xa1\xcc\xed\xa0\x2e\xa5\xb7\x45\xdd\x3b\xd2\xa1\x75\x77\x45\x2e\x14\x60\x81\x34\x3e\x43\x30\x44\x13\x18\xe1\xdd\x47\x9e\xef\x97\xf9\xee\xf4\xff\x8b\xb6\x4a\xbb\x6a\x04\xf1\x90\x4c\x67\x28\xcb\x11\x47\xf3\x3f\xe0\xa9\x2b\x93\xca\x1f\x7a\x87\xe9\x1a\xae\xce\x57\xc6\xcf\x79\x43\x1e\xb9\x48\xee\x01\xd3\xa3\x21\x9e\x28\x82\x02\x8d\x31\x84\x3e\xf8\x92\x19\x7e\xe7\x62\x72\x07\x13\x2c\x5e\x02\x00\x00\xff\xff\xc1\xa7\x82\x58\x64\x0d\x00\x00")

func compiledPrototypeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeAbi,
		"compiled/Prototype.abi",
	)
}

func compiledPrototypeAbi() (*asset, error) {
	bytes, err := compiledPrototypeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x0b\x96\xda\x3c\x0f\xdd\x92\x64\x3d\x2c\x2f\xc7\xcf\xfd\x2f\xe1\x3f\x8e\x33\x30\x4c\xa6\x21\x0e\x85\x9f\xd3\x0f\x38\x2d\x45\xc4\x0f\xf9\x5e\x5d\x59\x76\x15\x0c\x14\x18\xc4\x11\x1b\xa0\x28\x02\x20\x88\x57\x00\x30\x68\x45\x92\x80\x22\x16\x17\x0d\xfa\x6f\x0e\xfa\x2f\x14\xfa\xdf\x8d\x00\xae\xed\x15\x80\x49\x71\x79\xaa\xe1\xe8\x81\xc4\x67\x40\x38\xf9\x0a\x00\xac\xd4\xd6\x17\xaa\x81\x12\x20\x79\x4b\x62\xc8\xcb\x38\x2a\x7e\xb1\xba\xc2\x54\xf2\xb0\xa2\x84\xd5\xca\xd5\x47\x16\x3f\xac\x85\x87\x15\x6b\x90\x54\x59\x16\xab\x63\x1c\x56\xe7\x82\xb3\xa2\x69\x58\xa3\x5b\xad\x54\x2c\xfb\x32\xac\x04\x32\xac\xa4\x12\x9a\xd5\x32\xac\x66\xab\xd5\x3c\xc6\xd0\xd6\x67\x4b\x1b\x56\x2d\x96\x4d\x42\x5c\xac\xcc\x6b\xbf\x5e\x35\x73\xa3\x31\x33\x8e\x34\xac\x06\xa5\xb1\x24\x1e\xd6\xba\xfa\x66\x39\x52\x62\x1e\xbe\x09\xaf\x5e\x04\x21\xcb\x9c\x68\x58\xa3\x5f\xad\xb5\xa0\x50\x86\xc5\xaa\xb0\x8e\x96\x43\xe6\x96\x19\x87\xd5\x56\x2f\x72\x29\x2e\x86\xd0\x86\xb5\xe5\x61\x2d\xe6\x89\x28\xe6\xc5\xea\xa9\x89\x97\x74\xe5\xc2\x85\x23\xd8\xfb\xbe\xe5\x08\x0c\xcc\xd9\x80\x14\xc8\x10\x30\x80\x81\x75\x0e\x5c\x30\xbc\xf7\x42\x0d\x7d\xda\xd0\xdb\x06\x17\x96\x1e\x1e\x6b\x2f\xcb\xbb\xfb\x92\xa2\xa8\x24\x80\xef\x5e\xa8\x6c\xbd\x48\xf1\x8d\xbd\xb0\x58\xbb\x17\x4b\xc4\xa1\x81\x39\x94\xf1\x36\xec\x11\xb8\xb4\xc1\xe5\xd9\xf5\x89\x80\x40\x01\x1a\x7d\xf7\xba\x6e\xe2\x1b\x9c\xa3\xe7\x78\xdd\xc7\xc1\xb0\xe3\x51\xc8\xee\xd6\xa3\xaf\x16\x5f\x9f\x13\x9e\x39\x2e\x5b\xcf\x2c\x3f\xc7\xb3\x3f\x7a\x14\xd3\x0f\x8f\x66\x3c\x88\x75\xe3\x01\xc1\x93\xb0\xf9\x2b\x8c\x4c\x51\x37\x71\x45\x88\x5b\x2f\x58\xff\xbe\x17\x97\x59\x14\xc2\xdb\x35\x9f\xe9\x75\xe6\xd9\x09\x2c\x29\xf0\x76\x15\x4a\x79\x0d\x1b\x77\x19\x5a\x11\xb6\x98\xd5\xb4\x99\x2d\x33\xbc\x31\xf3\x6a\xc5\x8d\x17\xcc\xdb\xf8\x61\x7b\xd1\x9a\x7f\xcd\x0c\x41\xf3\x69\x05\xe0\xd8\xb6\x1e\x54\x7e\x5e\xec\x20\xea\x96\x0d\xdc\xb6\xf9\x5d\xdc\x13\xf2\xfb\x65\x16\xae\xde\x46\x30\x5d\xd7\xec\x66\xfd\xdc\xda\xe2\xcf\x2b\x28\xb2\xcd\x6f\x12\xe5\x7d\x99\x8c\x94\xf3\x06\x01\x49\xb4\xf5\xa2\xda\x13\x11\x90\xaa\x0f\xef\x2d\x14\xb6\xf1\xa7\xfc\x84\xfc\x75\x99\xb5\x66\x79\x3b\xe5\xd7\xb0\xcd\x7f\x5a\x9f\x90\xff\xfe\xda\x2a\xf6\x3a\xe9\xac\x62\x79\xb0\x8d\xb7\x9e\x9e\xa0\xb9\x97\xd9\x5a\xb2\x4d\xbc\x78\xde\xe6\x2f\x1f\xdf\x38\x7f\x61\xa4\x70\x36\xde\xba\x6f\x99\xcc\x29\x62\xe2\xd2\x7b\x21\x98\x99\x93\x12\x46\x4b\x2e\x7a\x67\x64\xb4\xf6\x4f\xdf\x6b\xed\x47\xea\x76\x58\xd9\x03\x0c\x8b\x92\x3f\x3f\x22\x5f\x12\xf5\x97\xcc\x03\x70\xcd\x52\x9d\x57\x0b\xeb\xbc\x01\x25\x94\x95\x8d\x16\x7e\xe4\x4f\x89\x0d\xaf\xbf\x46\x95\x11\x21\x9d\x4d\x75\xfc\x6b\x7d\xee\xfa\xd6\x51\x79\xcf\x22\x4b\xa8\x84\x10\x8a\xb1\xf1\x07\xd9\x23\x63\x5c\x91\x75\xf7\x91\x0d\xbe\xed\x20\x1b\x02\xed\x23\x3b\xfa\xef\x76\x07\x86\xb8\xb6\x8a\xe1\x7b\x9f\x57\xa5\x12\xfc\x5d\x3d\xfa\x67\xff\xfe\x08\x4f\x5c\xa8\x54\x5b\x73\xff\x0a\x4f\x76\xce\x0d\x66\xf0\x8d\xba\x87\x6f\xb4\x33\xf8\xc6\xf0\x7f\xc0\x17\x5d\x11\x70\xed\x9f\xd1\x81\xef\x73\xbf\x39\x15\x3e\x87\x73\x52\xda\xc1\x39\x79\x7f\x02\xe7\x64\xe5\x41\x9c\x11\x52\x6c\x8f\xe4\xf5\x90\x8c\x5b\x0e\xe9\x93\xd7\x8f\x8e\x31\xc5\x9a\xec\xeb\x0e\x6b\x72\xcf\xfa\xd3\xac\xc9\xd1\xe6\x58\xd3\xf7\x88\x8a\x50\xdc\xc2\xb6\xde\xa3\x6f\x60\x99\x7c\x88\xa7\xa1\xbd\x41\x16\xae\x75\x37\x90\xb9\xfe\x0b\x7e\xaf\xc7\xc1\x37\x75\x5e\x34\x68\xf6\xac\x41\x2b\x45\xd7\x0b\x9c\xe6\xd9\x81\xa2\x83\x1e\x3c\x2a\xde\xed\x8f\x27\xb0\xb3\xcb\xfd\x5a\xb5\x93\xea\x27\xd5\x45\xf6\xf1\x1a\x05\xee\x49\x51\xf0\xc2\x7a\xf3\x00\x3f\x4b\xde\xe3\x67\xa9\x67\xf8\x59\xda\x24\x3f\x17\x55\x1b\xdf\x86\xa6\x55\x0c\x46\xe7\x35\x4d\x13\x97\x0c\x29\xf7\x4c\x76\xc9\x65\xfc\x24\x3c\xf9\x05\xaa\xf6\xa7\xb3\x2d\xba\xe2\x70\xa0\xc6\xa8\x99\x77\xb0\xae\xc5\x0e\xd4\x18\x17\x84\x6a\x7c\x24\xeb\xa8\x44\x4d\x45\x3f\xd5\xe4\xe1\x31\xa6\xb2\x4e\x4b\x61\x07\xe9\x96\xcb\x89\xa8\x6e\x95\xce\x64\x9d\xe5\x02\xf9\x75\x59\x47\xa7\xb2\x0e\x79\xd0\xa6\xd5\x93\xb6\xdf\x73\xcf\xb3\xb3\x4e\x82\x8a\x66\x1c\x3f\x7b\xee\xdf\x78\x8c\x88\xe5\xcf\x3c\x46\x24\x9c\xe7\x31\x22\xfb\xc7\xf6\xdc\xb3\x18\xd7\x60\x89\x9a\xb1\x39\xfa\x68\xdd\xa1\x31\xa6\x38\xe2\xdc\x4e\xfd\x8d\x8e\x4f\xd4\xdf\xe8\x64\xb2\xfe\x5e\xb5\xce\x95\xfa\x42\xad\x8b\x77\xb5\x0e\x35\x7b\xa7\xa2\xa8\xec\xc3\x4f\xbd\x53\x51\xfe\x39\xde\x01\xad\xd3\xaf\xff\xdf\x33\xaf\x75\x99\x93\x2b\x76\x51\xba\x7f\x60\x87\xcd\x0b\x27\x76\xd8\x49\x7b\xf5\x1f\xd2\xf1\xfa\x8f\xaf\xec\xa4\xe3\xf5\xdf\x8e\xaa\xe1\xcd\x9f\x2f\x54\x71\x66\x3d\x90\xc7\xfd\x83\x22\xb2\xa4\x17\x32\x5f\xee\x32\x3f\x68\xf5\xda\xf9\xaf\x41\xf9\x5e\x7d\x79\x84\xf9\xdd\x47\xe5\x47\xf6\xbc\x16\xb0\x7c\x6e\x50\x66\xc6\x98\xca\x03\x42\x3b\xe7\x73\x28\x7c\xe2\x7c\x0e\x45\x26\xcf\xe7\xd6\x68\x90\xea\xde\x6a\xcf\xfb\x23\x0f\xf4\x4f\xe5\x9f\xfa\x3f\x13\x0d\x0f\x9d\xb4\x04\x8d\xad\x25\xf9\x6f\x9d\xb4\xa0\xda\x1e\x3f\x35\x9c\xe1\xa7\xc6\x33\xe7\xc7\xd7\x93\x96\x13\xe8\x81\x84\x20\x50\xc3\x7f\x0c\x3d\xaf\x3b\xf7\xb3\xe8\xfd\x9d\xfb\xd9\x5f\xd1\xf3\x96\x5f\x8d\x5e\x2e\xdc\x9c\x03\xfb\x57\xea\xcd\x37\xcb\x41\xe6\x65\x87\x25\x66\xe1\x04\x4b\x2c\xb4\xd7\xd6\xab\xc0\xd1\xd7\xe2\xed\x53\xaf\x1e\x1d\x63\x8a\x23\xc1\xfc\x0e\x47\x42\x48\x27\x38\x12\x12\x9e\xda\xa7\xc4\xbe\x29\x7e\xa3\x7d\xca\x7a\x36\xb7\x5f\xa7\x7e\x1f\xef\x78\xbd\x3a\x7f\x1f\x64\x8a\x0e\xd3\x47\x29\x8f\x8e\x31\x15\x05\x09\xe2\x4e\x14\x24\xac\x27\xa2\x20\x11\x3f\xa8\x94\x53\x48\xcc\xd6\xca\x06\x8a\x98\x7b\xf4\x0b\xcc\x8d\xf4\xd9\xa3\x1d\xe2\x54\xa6\x9d\xfb\x2d\xcc\x7c\xe7\x7e\xeb\x57\x4e\x65\xa9\x73\x9c\x9a\xe3\x84\xa4\x55\x89\x73\x7b\xe1\xf9\x89\x83\x7b\x4a\xec\x49\x45\xb3\xaa\x83\xae\xc0\x0e\xb4\x28\x7a\xf2\xac\xd2\xbf\x75\x4d\xf6\xd8\xdb\x0c\x75\x3e\xaa\xc4\x00\x11\x55\xd4\xf9\xe8\xa3\x77\x04\x62\x0e\x92\x69\xb3\x54\x9a\x68\x4c\xea\x53\x04\x4c\xc5\x37\x13\x0c\xb9\x62\xac\xce\xa3\xb0\x09\x24\x33\x6c\xac\xc9\x55\x75\xd5\x63\x48\x39\x19\xa1\x6f\x06\xe0\xc2\xff\x02\x00\x00\xff\xff\x4b\xe3\x63\x06\x94\x3a\x00\x00")

func compiledPrototypeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBin,
		"compiled/Prototype.bin",
	)
}

func compiledPrototypeBin() (*asset, error) {
	bytes, err := compiledPrototypeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x09\x72\xe3\xba\x0e\xbc\x12\x40\x2c\x04\x8f\xc3\xf5\xfe\x47\xf8\x45\x49\xf1\x12\x25\xb2\x28\x8f\xfc\x5d\x79\xb6\x6b\xca\x63\x58\x5c\xc0\x6e\x34\x08\x32\x0a\x06\x0a\x0c\xe2\x14\x80\x49\x11\x14\x01\x1a\x8a\x57\x00\x20\xf1\x19\x10\x0e\xbe\x02\x00\x2b\xb5\xe5\x85\x6a\xa0\x04\x48\xde\x92\x18\xf2\x34\x8e\x8a\x9f\xac\xae\x30\x95\x3c\x5b\x51\xc2\x62\xe5\xea\x23\x8b\x9f\xad\x85\x67\x2b\xd6\x20\xa9\xb2\x4c\x56\xc7\x38\x5b\x9d\x0b\xce\x8a\xa6\xd9\x1a\xdd\x62\xa5\x62\xd9\x97\xd9\x4a\x20\xb3\x95\x54\x42\xb3\x5a\x66\xab\xd9\x62\x35\x8f\x31\xb4\xe5\xd9\xd2\x66\xab\x16\xcb\x26\x21\x4e\x56\xe6\xa5\x5f\xaf\x9a\xb9\xd1\x3c\x33\x8e\x34\x5b\x0d\x4a\x63\x49\x3c\x5b\xeb\xe2\x9b\xe5\x48\x89\x79\xf6\x4d\x78\xf1\x22\x08\x59\xe6\x44\xb3\x35\xfa\xc5\x5a\x0b\x0a\x65\x98\xac\x0a\xcb\x68\x39\x64\x6e\x99\x71\xb6\xda\xe2\x45\x2e\xc5\xc5\x10\xda\x6c\x6d\x79\xb6\x16\xf3\x44\x14\xf3\x64\xf5\xd4\xc4\x4b\xea\x48\x1a\xb4\x22\x89\xd8\x00\xa5\xaf\x66\xef\xfb\x6a\x17\x98\xd6\xbd\x5b\xd8\x80\x14\xc8\x10\x30\x80\x81\x75\x0e\x5c\x30\x7c\xf4\x42\x0d\x7d\xda\xd0\xdb\x06\x17\xa6\x1e\x9e\x6b\x2f\xd3\xbb\xfb\x92\xa2\xa8\x24\x80\x5b\x2f\x54\xd6\x5e\xa4\xf8\xc6\x5e\x58\xac\xdd\x8b\x29\xe2\xd0\xc0\x1c\xca\xfc\x36\xec\x11\x38\xb5\xc1\xe9\xd9\xe5\x89\x80\x40\x01\x1a\xdd\x7a\x5d\x61\xe5\xb5\x73\x74\x8e\xd7\x7d\x1c\x0c\x1b\x1e\x85\xec\xee\x3d\xfa\x6a\xf1\xf5\x39\xe0\x99\xe3\xb2\xf6\xcc\xf2\x39\x9e\xfd\xea\x51\x4c\xdf\x3c\x1a\xf1\x20\xd6\x95\x07\x04\x27\x61\xf3\x4f\x18\x99\xa2\xae\xe2\x8a\x10\xd7\x5e\xb0\xfe\x7b\x2f\x2e\xb3\x28\x84\xf7\x6b\x3e\xd2\xeb\xc8\xb3\x03\x58\x52\xe0\xf5\x2a\x94\xf2\x1a\x36\x6e\x32\xb4\x22\xac\x31\xab\x69\x35\x5b\x66\x78\x63\xe6\xd5\x8a\x2b\x2f\x98\xd7\xf1\xc3\xf6\xa2\x35\xff\x9a\x19\x82\xe6\xc3\x0a\xc0\xb1\xad\x3d\xa8\x7c\x5e\xec\x20\xea\x9a\x0d\xdc\xd6\xf9\x5d\xdc\x09\xf9\xfd\x32\x0b\x57\xef\x23\x98\xae\x6b\x76\xb7\x7e\x6e\x69\xf1\xfb\x0a\x8a\xac\xf3\x9b\x44\x79\x5f\x26\x23\xe5\xbc\x42\x40\x12\xad\xbd\xa8\x76\x22\x02\x52\xf5\xe9\xbd\x85\xc2\x3a\xfe\x94\x4f\xc8\x5f\x97\x59\x6b\x96\xb7\x53\x7e\x0d\xeb\xfc\xa7\xf5\x84\xfc\xf7\xcf\x56\xb1\xd7\x49\x47\x15\xcb\x83\xad\xbc\xf5\x74\x82\xe6\x5e\x66\x6b\xc9\x56\xf1\xe2\x79\x9d\xbf\x7c\x7c\xe3\xfc\x85\x91\xc2\xd1\x78\xeb\xbe\x65\x32\xa7\x88\x89\x4b\xef\x85\x60\x64\x4e\x4a\x18\x2d\xb9\xe8\x9d\x91\xd1\xd2\x3f\xdd\xd6\xda\xcf\xd4\xed\xb0\xb0\x07\x18\x26\x25\x3f\x3f\x22\x5f\x12\xf5\x97\xcc\x03\x70\xcd\x52\x9d\x57\x13\xeb\xbc\x01\x25\x94\x85\x8d\x16\xbe\xe5\x4f\x89\x0d\xaf\xbf\x46\x95\x39\x42\x3a\x9b\xea\xfc\xbf\xe5\xb9\xeb\x5b\xe7\xca\x7b\x14\x59\x42\x25\x84\x50\x8c\x8d\x3f\xc8\xee\x19\xe3\x8a\xac\x7b\x8c\x6c\xf0\x6d\x03\xd9\x10\x68\x1b\xd9\xb9\xff\x6e\x77\x60\x88\x4b\xab\x18\x6e\xfb\xbc\x2a\x95\xe0\xcf\xea\xd1\x3f\xfb\xf7\x67\x78\xe2\x42\xa5\xda\x9a\xfb\x2b\x3c\xd9\x38\x37\x18\xc1\x37\xea\x16\xbe\xd1\x8e\xe0\x1b\xc3\xff\x01\x5f\x74\x45\xc0\xb5\x3f\xa3\x03\xb7\x73\xbf\x3b\x15\x3e\x86\x73\x52\xda\xc0\x39\x79\x7f\x00\xe7\x64\xe5\x49\x9c\x11\x52\x6c\xcf\xe4\xf5\x90\x8c\x5b\x0e\xe9\x93\xd7\xf7\x8e\x31\xc4\x9a\xec\xeb\x06\x6b\x72\xcf\xfa\xc3\xac\xc9\xd1\xc6\x58\xd3\xf7\x88\x8a\x50\xdc\xc4\xb6\xde\xa3\x6f\x60\x99\x7c\x88\x87\xa1\xbd\x43\x16\xae\x75\x37\x90\xb9\xfe\x0b\xde\xd6\xe3\xe0\x9b\x3a\x2f\x1a\x34\x7b\xd6\xa0\x95\xa2\xeb\x05\x4e\xf3\xec\x40\xd1\x41\x0f\x1e\x15\xef\xb6\xc7\x13\xd8\xd8\xe5\x7e\xad\xda\x41\xf5\x93\xea\x22\xfb\x78\x8d\x02\x77\x52\x14\xbc\xb0\xde\xdc\xc1\xcf\x92\xb7\xf8\x59\xea\x11\x7e\x96\x36\xc8\xcf\x49\xd5\xe6\x6f\xb3\xa6\x55\x0c\x46\xc7\x35\x4d\x13\x97\x0c\x29\xf7\x4c\x76\xc9\x65\x7c\x12\x9e\xfc\x02\x55\xfb\xed\x6c\x8b\xae\x38\xec\xa8\x31\x6a\xe6\x0d\xac\x6b\xb1\x1d\x35\xc6\x05\xa1\x1a\x9f\xc9\x3a\x2a\x51\x53\xd1\x4f\x35\xb9\x7b\x8c\xa1\xac\xd3\x52\xd8\x40\xba\xe5\x72\x20\xaa\x5b\xa5\x23\x59\x67\xba\x40\x7e\x5d\xd6\xd1\xa1\xac\x43\x1e\xb4\x69\xf5\xa4\xed\xe7\xdc\x73\x76\xd6\x49\x50\xd1\x8c\xe3\x67\xcf\xfd\x13\x8f\x11\xb1\xfc\xce\x63\x44\xc2\x71\x1e\x23\xb2\x7f\x6e\xcf\x3d\x8a\x71\x0d\x96\xa8\x19\x9b\xa3\x8f\xd6\xed\x1a\x63\x88\x23\xce\x6d\xd4\xdf\xe8\xf8\x40\xfd\x8d\x4e\x06\xeb\xef\x45\xeb\x5c\xa9\x2f\xd4\xba\xf8\x50\xeb\x50\xb3\x77\x2a\x8a\xca\x3e\x7c\xd7\x3b\x15\xe5\xef\xe3\xed\xd0\x3a\xfd\xfa\xfb\x9e\x71\xad\xcb\x9c\x5c\xb1\x8b\xd2\xfd\x81\x1d\x36\x4f\x9c\xd8\x60\x27\x6d\xd5\x7f\x48\xfb\xeb\x3f\xbe\xb2\x93\xf6\xd7\x7f\x1b\xaa\x86\x77\xff\xbe\x50\xc5\x91\xf5\x40\x9e\xef\x1f\x14\x91\x25\xbd\x90\xf9\xf2\x90\xf9\x41\xab\xd7\xce\x7f\x0d\xca\x8f\xea\xcb\x3d\xcc\xef\x3e\x2a\x3f\xb3\xe7\xb5\x80\xe5\x73\x83\x32\x32\xc6\x50\x1e\x10\xda\x38\x9f\x43\xe1\x03\xe7\x73\x28\x32\x78\x3e\xb7\x44\x83\x54\xf7\x56\x7b\xde\x6f\x79\xa0\x7f\x2a\x7f\xd7\xff\x91\x68\x78\xea\xa4\x25\x68\x6c\x2d\xc9\x7f\xeb\xa4\x05\xd5\xb6\xf8\xa9\xe1\x08\x3f\x35\x1e\x39\x3f\xbe\x9e\xb4\x1c\x40\x0f\x24\x04\x81\x1a\xfe\x63\xe8\x79\xdd\xb8\x9f\x45\xef\x1f\xdc\xcf\xfe\x88\x9e\xb7\xfc\x6a\xf4\x72\xe1\xe6\x1c\xd8\x5f\xa9\x37\xdf\x2c\x07\x99\x97\x0d\x96\x98\x85\x03\x2c\xb1\xd0\x5e\x5b\xaf\x02\x47\x5f\x8b\xb7\x4f\xbd\xba\x77\x8c\x21\x8e\x04\xf3\x1b\x1c\x09\x21\x1d\xe0\x48\x48\x78\x68\x9f\x12\xfb\xa6\xf8\x8d\xf6\x29\xcb\xd9\xdc\x76\x9d\x7a\x3b\xde\xfe\x7a\x75\xfc\x3e\xc8\x14\x1d\xa6\x8f\x52\xee\x1d\x63\x28\x0a\x12\xc4\x8d\x28\x48\x58\x0f\x44\x41\x22\x7e\x52\x29\x87\x90\x18\xad\x95\x0d\x14\x31\xf7\xe8\x17\x18\x1b\xe9\xb3\x47\xdb\xc5\xa9\x4c\x1b\xf7\x5b\x98\xf9\xc1\xfd\xd6\x8f\x9c\xca\x52\xc7\x38\x35\xc6\x09\x49\x8b\x12\xe7\xf6\xc2\xf3\x13\x07\x8f\x94\xd8\x93\x8a\x66\x55\x07\x5d\x81\x1d\x68\x51\xf4\xe4\x59\xa5\x7f\xeb\x9a\xec\xb1\xb7\x99\xd5\x79\xaf\x12\x03\x44\x54\x51\xe7\xa3\x8f\xde\x11\x88\x39\x48\xa6\xcd\x52\x69\xa2\x31\xa9\x4f\x11\x30\x15\xdf\x4c\x30\xe4\x8a\xb1\x3a\x8f\xc2\x26\x90\xcc\xb0\xb1\x26\x57\xd5\x55\x8f\x21\xe5\x64\x84\xbe\x19\x80\x0b\xff\x0b\x00\x00\xff\xff\x66\x57\xf4\x8c\x54\x3a\x00\x00")

func compiledPrototypeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeBinRuntime,
		"compiled/Prototype.bin-runtime",
	)
}

func compiledPrototypeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/Prototype.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeeventAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x90\x3f\x6b\x84\x40\x10\xc5\xbf\xcb\x90\xd2\xca\x90\x14\xb6\xa9\x03\x21\x21\x95\x58\xcc\xb9\x73\xb0\xa0\xb3\xb2\x33\xeb\xdd\x22\x7e\xf7\xe3\xe4\xf0\x1f\xda\x78\xd7\xee\xce\xfb\xbd\x1f\x2f\xef\x00\xd9\x71\xac\x5d\x10\xc8\xce\x58\x09\x25\x60\xb9\x09\x2a\x90\xe5\x1d\x58\x36\x74\x25\x33\x7e\x31\xd6\x04\x19\x30\x5d\xbe\x51\x94\x3c\x24\xa0\xb1\xb9\x3f\xa1\x31\x9e\x44\xa0\x2f\xc6\xab\xb7\xf5\x0d\xb5\xc4\x0a\x7d\x72\xac\xb4\xf4\x64\xac\x4e\xb4\x60\x59\xd3\x8f\xcf\x81\xb7\x13\xf1\x54\xba\x96\x7c\xfc\x45\xa5\x8d\xe0\x4c\xf5\x6b\x80\xff\x54\xc8\xc7\x75\xd5\x87\xa9\x3a\xc8\xe6\x3a\xfb\xae\x58\xaa\x75\xb3\xf6\x53\x54\x92\xf7\x74\x61\xf9\x2f\xcf\xcc\xb9\xf0\x93\xc6\xb1\xb8\xd7\x2b\xfe\xad\xb9\x0f\xcb\xe2\x16\x00\x00\xff\xff\xa4\xcf\xdd\xbb\x6b\x02\x00\x00")

func compiledPrototypeeventAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeeventAbi,
		"compiled/PrototypeEvent.abi",
	)
}

func compiledPrototypeeventAbi() (*asset, error) {
	bytes, err := compiledPrototypeeventAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeEvent.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeeventBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xcb\xb1\x91\xc5\x40\x08\x83\xe1\x96\xb4\xb0\x08\x28\x07\x8c\xe9\xbf\x84\x1b\x07\x37\x2f\x51\xa0\xf9\x7e\x22\x40\x5c\x98\xe8\x0d\x1c\x23\xb0\xe6\x04\x10\xd8\xb1\x36\x10\x6a\x9f\x39\xf3\xbd\x9a\xdf\xae\x02\xbf\xf2\x5f\x03\x75\x68\x14\x2f\x2f\x17\x85\x85\xe0\x74\x0e\xb5\xf9\xf2\xc6\x3e\x56\x37\xa9\xa7\xa9\xe9\x55\x4f\x97\x95\xae\xef\x48\x47\x98\xbe\x35\xa8\x61\xea\x54\xde\x57\xfa\x6c\x34\x20\xf9\x17\x00\x00\xff\xff\xb9\x63\x5f\xea\xa4\x00\x00\x00")

func compiledPrototypeeventBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeeventBin,
		"compiled/PrototypeEvent.bin",
	)
}

func compiledPrototypeeventBin() (*asset, error) {
	bytes, err := compiledPrototypeeventBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeEvent.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypeeventBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x01\x01\x00\x21\x08\x03\xc0\x4a\x13\x64\x42\x9c\xf1\x68\xff\x08\x7f\x44\x82\xd8\x08\x23\x80\xc4\x1b\x40\x8b\x41\x3b\x3a\x3a\xe6\x88\x34\xac\xae\xa1\x37\x2f\x77\xbe\x2f\xb4\x8b\xbe\x9a\x5e\x47\xfa\x5a\x21\x7f\xe7\x8d\x75\x66\xf8\xd5\x40\xc3\xf2\x51\xed\x6b\xbd\x5e\x36\x60\xf5\x07\x00\x00\xff\xff\xfe\x47\x63\xed\x6a\x00\x00\x00")

func compiledPrototypeeventBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypeeventBinRuntime,
		"compiled/PrototypeEvent.bin-runtime",
	)
}

func compiledPrototypeeventBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypeeventBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeEvent.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeAbi = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\x4f\xeb\x9b\x40\x10\xfd\x2e\x7b\xf6\xf4\x2b\xed\x21\xb7\x36\xd0\x5b\x4a\x69\xe9\x29\x84\x32\xae\x93\x74\xc9\x3a\x2b\x3b\xb3\x06\x09\xfd\xee\xc5\x80\x51\xaa\x54\x4d\xfd\x93\x1c\x85\x99\xf1\x3d\xde\xec\x7b\xb3\xbf\x2a\xed\x88\x05\x48\xd4\xe6\x08\x96\x31\x52\x86\xb2\x20\xac\x36\xfb\xab\x22\x48\x51\x6d\x14\xa3\x3d\xaa\x48\x49\x91\x95\x5f\x90\x24\x1e\x99\xd5\xef\xa8\x2e\xc8\x1c\xb1\xf3\x1d\x35\x87\xa8\xaa\x21\x10\x93\xe3\xcf\x40\x75\xb1\x0b\xf2\xf7\xaf\xea\x11\xb1\x73\xf6\xd6\x9f\x41\x01\xb1\xc5\x3b\x3e\x16\x10\xdc\x05\x81\xd8\x58\x23\x45\x39\xda\x51\x55\x74\x6f\x3f\x06\xd2\x62\x1c\xdd\x60\xd6\x1c\xc5\x87\x31\x14\x5b\xf0\x53\x60\xc1\x5e\xec\xcd\xfe\x7e\xf8\xb9\xc1\xcb\xd4\xc0\x6b\x6d\x62\xeb\xf4\xf9\x4b\x48\x63\x6c\xe8\x13\x0c\xc9\xbb\xb7\x0e\x7e\x48\xe8\x4f\xc5\x47\xf9\x54\x76\xf5\xd1\x2c\xa7\xbc\xbd\xff\x30\x25\xcd\xc7\x77\x90\xf0\xb2\xab\xc4\xe9\x95\x91\x51\x76\x6d\x25\x57\x5e\xb6\x9a\xcb\x19\x8b\xc6\x43\x28\x04\xb9\x53\x2c\x16\xe7\xe1\x84\x9f\x07\x3c\xa6\xc6\x8c\xb5\x17\x32\xf0\x30\x8d\x0c\xff\xe0\xfe\xa7\x36\xc2\x26\xe6\xa0\xd5\x42\xfd\x0b\x78\xeb\x12\x7c\x35\xd8\x3a\x78\x8f\x24\xdf\x87\x79\xf3\x33\xf9\xdb\x88\xec\x31\x3c\x90\xdf\xd4\xea\x2c\x92\xac\x8c\x16\xf5\x50\x05\xe7\x49\xd7\xc7\x79\x6a\x8f\x89\x91\x8e\x68\xa9\x4b\x3c\x6a\x97\xa3\x2f\xbe\x81\x60\x77\x06\xb5\x3c\x7e\x7b\x9b\xfa\xd5\x02\xcd\xea\xf3\x8f\xd3\x1e\xea\x85\x90\x24\x13\x9b\xe1\x53\xd1\xf3\x98\xba\x1c\xd7\x63\xf8\xdf\xee\xd9\xbd\x67\xff\x3a\x99\xa2\x65\xee\xa9\x85\xce\xc6\x18\x2c\x90\xc6\xf5\xee\xc6\xd9\xaf\x91\xb2\x6e\x5b\x99\xd4\xeb\x5c\xc5\x63\xf2\x63\xe1\xe4\x38\xfc\x09\x00\x00\xff\xff\xb1\x59\x01\xf8\x7d\x0e\x00\x00")

func compiledPrototypenativeAbiBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeAbi,
		"compiled/PrototypeNative.abi",
	)
}

func compiledPrototypenativeAbi() (*asset, error) {
	bytes, err := compiledPrototypenativeAbiBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.abi", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBin = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBin,
		"compiled/PrototypeNative.bin",
	)
}

func compiledPrototypenativeBin() (*asset, error) {
	bytes, err := compiledPrototypenativeBinBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _compiledPrototypenativeBinRuntime = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func compiledPrototypenativeBinRuntimeBytes() ([]byte, error) {
	return bindataRead(
		_compiledPrototypenativeBinRuntime,
		"compiled/PrototypeNative.bin-runtime",
	)
}

func compiledPrototypenativeBinRuntime() (*asset, error) {
	bytes, err := compiledPrototypenativeBinRuntimeBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "compiled/PrototypeNative.bin-runtime", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"compiled/Executor.abi": compiledExecutorAbi,
	"compiled/Executor.bin": compiledExecutorBin,
	"compiled/Executor.bin-runtime": compiledExecutorBinRuntime,
	"compiled/Extension.abi": compiledExtensionAbi,
	"compiled/Extension.bin": compiledExtensionBin,
	"compiled/Extension.bin-runtime": compiledExtensionBinRuntime,
	"compiled/ExtensionNative.abi": compiledExtensionnativeAbi,
	"compiled/ExtensionNative.bin": compiledExtensionnativeBin,
	"compiled/ExtensionNative.bin-runtime": compiledExtensionnativeBinRuntime,
	"compiled/IMeterNative.abi": compiledImeternativeAbi,
	"compiled/IMeterNative.bin": compiledImeternativeBin,
	"compiled/IMeterNative.bin-runtime": compiledImeternativeBinRuntime,
	"compiled/Measure.abi": compiledMeasureAbi,
	"compiled/Measure.bin": compiledMeasureBin,
	"compiled/Measure.bin-runtime": compiledMeasureBinRuntime,
	"compiled/Meter.abi": compiledMeterAbi,
	"compiled/Meter.bin": compiledMeterBin,
	"compiled/Meter.bin-runtime": compiledMeterBinRuntime,
	"compiled/MeterGov.abi": compiledMetergovAbi,
	"compiled/MeterGov.bin": compiledMetergovBin,
	"compiled/MeterGov.bin-runtime": compiledMetergovBinRuntime,
	"compiled/MeterNative.abi": compiledMeternativeAbi,
	"compiled/MeterNative.bin": compiledMeternativeBin,
	"compiled/MeterNative.bin-runtime": compiledMeternativeBinRuntime,
	"compiled/Params.abi": compiledParamsAbi,
	"compiled/Params.bin": compiledParamsBin,
	"compiled/Params.bin-runtime": compiledParamsBinRuntime,
	"compiled/ParamsNative.abi": compiledParamsnativeAbi,
	"compiled/ParamsNative.bin": compiledParamsnativeBin,
	"compiled/ParamsNative.bin-runtime": compiledParamsnativeBinRuntime,
	"compiled/Prototype.abi": compiledPrototypeAbi,
	"compiled/Prototype.bin": compiledPrototypeBin,
	"compiled/Prototype.bin-runtime": compiledPrototypeBinRuntime,
	"compiled/PrototypeEvent.abi": compiledPrototypeeventAbi,
	"compiled/PrototypeEvent.bin": compiledPrototypeeventBin,
	"compiled/PrototypeEvent.bin-runtime": compiledPrototypeeventBinRuntime,
	"compiled/PrototypeNative.abi": compiledPrototypenativeAbi,
	"compiled/PrototypeNative.bin": compiledPrototypenativeBin,
	"compiled/PrototypeNative.bin-runtime": compiledPrototypenativeBinRuntime,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"compiled": &bintree{nil, map[string]*bintree{
		"Executor.abi": &bintree{compiledExecutorAbi, map[string]*bintree{}},
		"Executor.bin": &bintree{compiledExecutorBin, map[string]*bintree{}},
		"Executor.bin-runtime": &bintree{compiledExecutorBinRuntime, map[string]*bintree{}},
		"Extension.abi": &bintree{compiledExtensionAbi, map[string]*bintree{}},
		"Extension.bin": &bintree{compiledExtensionBin, map[string]*bintree{}},
		"Extension.bin-runtime": &bintree{compiledExtensionBinRuntime, map[string]*bintree{}},
		"ExtensionNative.abi": &bintree{compiledExtensionnativeAbi, map[string]*bintree{}},
		"ExtensionNative.bin": &bintree{compiledExtensionnativeBin, map[string]*bintree{}},
		"ExtensionNative.bin-runtime": &bintree{compiledExtensionnativeBinRuntime, map[string]*bintree{}},
		"IMeterNative.abi": &bintree{compiledImeternativeAbi, map[string]*bintree{}},
		"IMeterNative.bin": &bintree{compiledImeternativeBin, map[string]*bintree{}},
		"IMeterNative.bin-runtime": &bintree{compiledImeternativeBinRuntime, map[string]*bintree{}},
		"Measure.abi": &bintree{compiledMeasureAbi, map[string]*bintree{}},
		"Measure.bin": &bintree{compiledMeasureBin, map[string]*bintree{}},
		"Measure.bin-runtime": &bintree{compiledMeasureBinRuntime, map[string]*bintree{}},
		"Meter.abi": &bintree{compiledMeterAbi, map[string]*bintree{}},
		"Meter.bin": &bintree{compiledMeterBin, map[string]*bintree{}},
		"Meter.bin-runtime": &bintree{compiledMeterBinRuntime, map[string]*bintree{}},
		"MeterGov.abi": &bintree{compiledMetergovAbi, map[string]*bintree{}},
		"MeterGov.bin": &bintree{compiledMetergovBin, map[string]*bintree{}},
		"MeterGov.bin-runtime": &bintree{compiledMetergovBinRuntime, map[string]*bintree{}},
		"MeterNative.abi": &bintree{compiledMeternativeAbi, map[string]*bintree{}},
		"MeterNative.bin": &bintree{compiledMeternativeBin, map[string]*bintree{}},
		"MeterNative.bin-runtime": &bintree{compiledMeternativeBinRuntime, map[string]*bintree{}},
		"Params.abi": &bintree{compiledParamsAbi, map[string]*bintree{}},
		"Params.bin": &bintree{compiledParamsBin, map[string]*bintree{}},
		"Params.bin-runtime": &bintree{compiledParamsBinRuntime, map[string]*bintree{}},
		"ParamsNative.abi": &bintree{compiledParamsnativeAbi, map[string]*bintree{}},
		"ParamsNative.bin": &bintree{compiledParamsnativeBin, map[string]*bintree{}},
		"ParamsNative.bin-runtime": &bintree{compiledParamsnativeBinRuntime, map[string]*bintree{}},
		"Prototype.abi": &bintree{compiledPrototypeAbi, map[string]*bintree{}},
		"Prototype.bin": &bintree{compiledPrototypeBin, map[string]*bintree{}},
		"Prototype.bin-runtime": &bintree{compiledPrototypeBinRuntime, map[string]*bintree{}},
		"PrototypeEvent.abi": &bintree{compiledPrototypeeventAbi, map[string]*bintree{}},
		"PrototypeEvent.bin": &bintree{compiledPrototypeeventBin, map[string]*bintree{}},
		"PrototypeEvent.bin-runtime": &bintree{compiledPrototypeeventBinRuntime, map[string]*bintree{}},
		"PrototypeNative.abi": &bintree{compiledPrototypenativeAbi, map[string]*bintree{}},
		"PrototypeNative.bin": &bintree{compiledPrototypenativeBin, map[string]*bintree{}},
		"PrototypeNative.bin-runtime": &bintree{compiledPrototypenativeBinRuntime, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

